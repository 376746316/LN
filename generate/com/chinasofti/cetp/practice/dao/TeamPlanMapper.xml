<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.cetp.practice.dao.TeamPlanMapper" >
  <resultMap id="BaseResultMap" type="com.chinasofti.cetp.practice.model.TeamPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <id column="PL_PLAN_ID" property="plPlanId" jdbcType="INTEGER" />
    <result column="PL_TEAM_ID" property="plTeamId" jdbcType="INTEGER" />
    <result column="PL_MEMBER_NO" property="plMemberNo" jdbcType="INTEGER" />
    <result column="PL_TASK_ID" property="plTaskId" jdbcType="INTEGER" />
    <result column="PL_SUGGEST_TIME" property="plSuggestTime" jdbcType="INTEGER" />
    <result column="PL_SUGGEST_TIME_SUFFIX" property="plSuggestTimeSuffix" jdbcType="CHAR" />
    <result column="PL_PLAN_TIME" property="plPlanTime" jdbcType="INTEGER" />
    <result column="PL_PLAN_TIME_SUFFIX" property="plPlanTimeSuffix" jdbcType="CHAR" />
    <result column="PL_PLAN_START_TIME" property="plPlanStartTime" jdbcType="TIMESTAMP" />
    <result column="PL_PLAN_END_TIME" property="plPlanEndTime" jdbcType="TIMESTAMP" />
    <result column="PL_REAL_TIME" property="plRealTime" jdbcType="INTEGER" />
    <result column="PL_REAL_START_TIME" property="plRealStartTime" jdbcType="TIMESTAMP" />
    <result column="PL_REAL_END_TIME" property="plRealEndTime" jdbcType="TIMESTAMP" />
    <result column="PL_STATUS" property="plStatus" jdbcType="CHAR" />
    <result column="PL_RESULT" property="plResult" jdbcType="VARCHAR" />
    <result column="PL_COMMIT_TIME" property="plCommitTime" jdbcType="TIMESTAMP" />
    <result column="PL_FINISH_PERCENT" property="plFinishPercent" jdbcType="DOUBLE" />
    <result column="PL_LEADER_SCORE" property="plLeaderScore" jdbcType="INTEGER" />
    <result column="PL_LEADER_REASON" property="plLeaderReason" jdbcType="VARCHAR" />
    <result column="PL_LEADER_TIME" property="plLeaderTime" jdbcType="TIMESTAMP" />
    <result column="PL_TEACHER_ID" property="plTeacherId" jdbcType="INTEGER" />
    <result column="PL_TEACHER_SCORE" property="plTeacherScore" jdbcType="INTEGER" />
    <result column="PL_TEACHER_REASON" property="plTeacherReason" jdbcType="VARCHAR" />
    <result column="PL_TEACHER_TIME" property="plTeacherTime" jdbcType="TIMESTAMP" />
    <result column="PL_USER_NO" property="plUserNo" jdbcType="INTEGER" />
    <result column="PL_REGTIME" property="plRegtime" jdbcType="TIMESTAMP" />
  </resultMap>
    <resultMap id="ResultMapWithStuName" type="com.chinasofti.cetp.practice.model.MoreTeamPlan" extends="BaseResultMap" >
    <result column="STU_NAME" property="stuName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithTask" type="com.chinasofti.cetp.practice.model.MoreTeamPlanWithTask" extends="BaseResultMap" >
    <result column="TASK_NAME" property="taskName" jdbcType="VARCHAR" />
    <result column="TASK_DIFFCULT" property="taskDiffcult" jdbcType="VARCHAR" />
    <result column="TASK_SCORE" property="taskScore" jdbcType="INTEGER" />
    <result column="TASK_IS_MILESTONE" property="taskIsMilestone" jdbcType="VARCHAR" />
    <result column="TASK_PRE_ID" property="taskPreId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithStuAndTask" type="com.chinasofti.cetp.practice.model.MoreMoreTeamPlan" extends="ResultMapWithStuName" >
    <result column="TASK_NAME" property="taskName" jdbcType="VARCHAR" />
    <result column="TASK_SCORE" property="taskScore" jdbcType="INTEGER" />
    <result column="TASK_PRE_ID" property="taskPreId" jdbcType="VARCHAR" />
    <result column="TASK_DIFFCULT" property="taskDiffcult" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapProgressRanking" type="com.chinasofti.cetp.practice.model.ProgressRanking" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="numALL" property="numAll" jdbcType="VARCHAR" />
    <result column="numDone" property="numDone" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="TreeTeamScore" type="com.chinasofti.cetp.practice.model.TreeTeamScore" >
    <!-- add by yf 2013-9-25 -->
    <id column="TASK_ID" property="taskId" jdbcType="INTEGER" />
    <result column="TASK_PRO_ID" property="taskProId" jdbcType="INTEGER" />
    <result column="TASK_PARENT" property="taskParent" jdbcType="INTEGER" />
    <result column="TASK_NAME" property="taskName" jdbcType="VARCHAR" />
    <result column="TASK_TIME" property="taskTime" jdbcType="INTEGER" />
    <result column="TASK_DIFFCULT" property="taskDiffcult" jdbcType="CHAR" />
    <result column="TASK_SCORE" property="taskScore" jdbcType="INTEGER" />
    <result column="TASK_IS_MILESTONE" property="taskIsMilestone" jdbcType="CHAR" />
    <result column="TASK_PRE_ID" property="taskPreId" jdbcType="VARCHAR" />
    <result column="TASK_PRIOR" property="taskPrior" jdbcType="CHAR" />
    <result column="TASK_TARGET" property="taskTarget" jdbcType="VARCHAR" />
    <result column="TASK_CONTENT" property="taskContent" jdbcType="VARCHAR" />
    <result column="TASK_PONIT" property="taskPonit" jdbcType="VARCHAR" />
    <result column="TASK_LEVEL" property="taskLevel" jdbcType="INTEGER" />
    <result column="TASK_SEQ" property="taskSeq" jdbcType="INTEGER" />
    <result column="TASK_IS_COMMIT" property="taskIsCommit" jdbcType="CHAR" />
    <result column="TASK_USER_NO" property="taskUserNo" jdbcType="INTEGER" />
    <result column="TASK_REGTIME" property="taskRegtime" jdbcType="TIMESTAMP" />
    <association property="moreTeamPlan" javaType="com.chinasofti.cetp.practice.model.MoreTeamPlan" resultMap="ResultMapWithStuName"></association>  
    <association property="teamPhaseCheck" javaType="com.chinasofti.cetp.practice.model.TeamPhaseCheck" resultMap="TeamPhaseCheck"></association>  
  </resultMap>
  <resultMap id="TeamPhaseCheck" type="com.chinasofti.cetp.practice.model.TeamPhaseCheck" >
    <!-- add by yf 2013-9-25 -->
    <id column="TPC_TEAM_ID" property="tpcTeamId" jdbcType="INTEGER" />
    <id column="TPC_TASK_ID" property="tpcTaskId" jdbcType="INTEGER" />
    <result column="TPC_SCORE" property="tpcScore" jdbcType="INTEGER" />
    <result column="TPC_ADD_SCORE" property="tpcAddScore" jdbcType="INTEGER" />
    <result column="TPC_ADD_REASON" property="tpcAddReason" jdbcType="VARCHAR" />
    <result column="TPC_USER_NO" property="tpcUserNo" jdbcType="INTEGER" />
    <result column="TPC_REGTIME" property="tpcRegtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    PL_PLAN_ID, PL_TEAM_ID, PL_MEMBER_NO, PL_TASK_ID, PL_SUGGEST_TIME, PL_SUGGEST_TIME_SUFFIX, 
    PL_PLAN_TIME, PL_PLAN_TIME_SUFFIX, PL_PLAN_START_TIME, PL_PLAN_END_TIME, PL_REAL_TIME, 
    PL_REAL_START_TIME, PL_REAL_END_TIME, PL_STATUS, PL_RESULT, PL_COMMIT_TIME, PL_FINISH_PERCENT, 
    PL_LEADER_SCORE, PL_LEADER_REASON, PL_LEADER_TIME, PL_TEACHER_ID, PL_TEACHER_SCORE, 
    PL_TEACHER_REASON, PL_TEACHER_TIME, PL_USER_NO, PL_REGTIME
  </sql>
  <sql id="Task_Column_List" >
  TASK_NAME, TASK_DIFFCULT, TASK_SCORE, TASK_IS_MILESTONE, TASK_PRE_ID
  </sql>
  <!-- add by yf 2013-9-25  -->
  <select id="getTreeTeamScore" resultMap="TreeTeamScore" parameterType="map">
	SELECT TASK_ID,
	       TASK_NAME,
	       TASK_DIFFCULT,
	       GROUP_CONCAT(STU_NAME) as STU_NAME,
	       PL_PLAN_ID,
	       TASK_SCORE,
	       PL_LEADER_SCORE,
	       PL_LEADER_REASON,
	       PL_TEACHER_SCORE,
	       PL_TEACHER_REASON,
	       TPC_SCORE,
	       TPC_ADD_SCORE,
	       TPC_ADD_REASON
	FROM   tp_pro_task
	       LEFT JOIN tp_team_plan
	         ON ( TASK_ID = PL_TASK_ID
	              AND PL_TEAM_ID = #{teamId,jdbcType=INTEGER} )
	       LEFT JOIN tp_team_plan_member ON TPM_PLAN_ID = PL_PLAN_ID
	       LEFT JOIN tp_student
	         ON ( STU_NO = TPM_MEMBER_NO )
	       LEFT JOIN tp_team_phase_check
	         ON( TASK_ID = TPC_TASK_ID
	             AND TPC_TEAM_ID = #{teamId,jdbcType=INTEGER} )
	WHERE  TASK_PRO_ID = #{proId,jdbcType=INTEGER} 
	<if test="parentId != null" >
    	   AND TASK_PARENT = #{parentId,jdbcType=INTEGER} 
    </if>
	<if test="parentId == null" >
    	   AND TASK_PARENT is null
    </if>
    GROUP BY TASK_ID
  </select>
  <select id="getTeamProgressRanking" resultMap="ResultMapProgressRanking" parameterType="java.lang.Integer" >
	SELECT a.PL_TEAM_ID                        AS ID,
	       (SELECT TEAM_NAME
	        FROM   tp_practice_team
	        WHERE  TEAM_ID = a.PL_TEAM_ID)     AS NAME,
	       Count(*)                            AS numALL,
	       Ifnull(b.numTaskDone, 0)            AS numDone,
	       SUM(Ifnull(a.PL_FINISH_PERCENT, 0)*Ifnull(TASK_SCORE, 0))/100.0 AS finPercent
	FROM
		tp_team_plan a
	INNER JOIN tp_pro_task ON a.PL_TASK_ID = TASK_ID
	       LEFT JOIN (SELECT PL_TEAM_ID,
	                         Count(*) numTaskDone
	                  FROM   tp_team_plan
	                  WHERE  pl_status = '4'
	                  GROUP  BY PL_TEAM_ID) b
	         ON a.PL_TEAM_ID = b.PL_TEAM_ID
	WHERE  a.PL_TEAM_ID IN (SELECT c.TEAM_ID
	                        FROM   tp_practice_team AS c
	                        WHERE  c.TEAM_PRAC_ID = #{pracId,jdbcType=INTEGER})
	GROUP  BY a.PL_TEAM_ID
	ORDER  BY finPercent DESC 
  </select>
  <select id="getTeamRank" resultType="java.lang.Integer" parameterType="map" >
	SELECT Ifnull(Count(*), 0) AS rank
	FROM   (SELECT a.PL_TEAM_ID                        AS ID,
	               (SELECT TEAM_NAME
	                FROM   tp_practice_team
	                WHERE  TEAM_ID = a.PL_TEAM_ID)     AS NAME,
	               Count(*)                            AS numALL,
	               Ifnull(b.numTaskDone, 0)            AS numDone,
	               Ifnull(b.numTaskDone, 0) / Count(*) AS finPercent
	        FROM   tp_team_plan a
	               LEFT JOIN (SELECT PL_TEAM_ID,
	                                 Count(*) numTaskDone
	                          FROM   tp_team_plan
	                          WHERE  pl_status = '4'
	                          GROUP  BY PL_TEAM_ID) b
	                 ON a.PL_TEAM_ID = b.PL_TEAM_ID
	        WHERE  a.PL_TEAM_ID IN (SELECT c.TEAM_ID
	                                FROM   tp_practice_team AS c
	                                WHERE  c.TEAM_PRAC_ID = #{pracId,jdbcType=INTEGER})
	        GROUP  BY a.PL_TEAM_ID
	        ORDER  BY finPercent DESC) d
	WHERE  Round(finPercent, 4) > Round((SELECT Ifnull((SELECT Count(*)
	                                                    FROM   tp_team_plan
	                                                    WHERE  PL_TEAM_ID = #{plTeamId,jdbcType=INTEGER}
	                                                           AND pl_status = '4'
	                                                    GROUP  BY PL_TEAM_ID), 0) / Count(*) AS finPercent
	                                     FROM   tp_team_plan
	                                     WHERE  PL_TEAM_ID = #{plTeamId,jdbcType=INTEGER}
	                                     GROUP  BY PL_TEAM_ID), 4) 
  </select>
  <select id="getPracPerProgressRanking" resultMap="ResultMapProgressRanking" parameterType="java.lang.Integer" >
	SELECT
		d.TPM_MEMBER_NO AS ID,
		STU_NAME AS NAME,
		Count(*) AS numALL,
		Ifnull(b.numTaskDone, 0) AS numDone,
		SUM(Ifnull(a.PL_FINISH_PERCENT, 0)*Ifnull(TASK_SCORE, 0))/100.0 AS finPercent
	FROM
		tp_team_plan a
	INNER JOIN tp_pro_task ON a.PL_TASK_ID = TASK_ID
	INNER JOIN tp_team_plan_member d ON d.TPM_PLAN_ID = a.PL_PLAN_ID
	INNER JOIN tp_student ON STU_NO = d.TPM_MEMBER_NO
	INNER JOIN tp_practice_team c ON (a.PL_TEAM_ID = c.TEAM_ID
	AND c.TEAM_PRAC_ID = #{pracId,jdbcType=INTEGER})
	LEFT JOIN (
		SELECT
			TPM_MEMBER_NO,
			Count(*) numTaskDone
		FROM
			tp_team_plan
		INNER JOIN tp_team_plan_member ON TPM_PLAN_ID = PL_PLAN_ID
		INNER JOIN tp_practice_team c ON (PL_TEAM_ID = TEAM_ID
	AND TEAM_PRAC_ID = #{pracId,jdbcType=INTEGER})
		WHERE
			pl_status = '4'
		GROUP BY
			TPM_MEMBER_NO
	) b ON d.TPM_MEMBER_NO = b.TPM_MEMBER_NO
	GROUP BY
		d.TPM_MEMBER_NO
	ORDER BY
		finPercent DESC	
  </select>
  <select id="getPracPerRank" resultType="java.lang.Integer" parameterType="map" >
	SELECT Ifnull(Count(*), 0) AS rank
	FROM   (SELECT a.PL_MEMBER_NO                      AS ID,
	               (SELECT STU_NAME
	                FROM   tp_student
	                WHERE  STU_NO = a.PL_MEMBER_NO)    AS NAME,
	               Count(*)                            AS numALL,
	               Ifnull(b.numTaskDone, 0)            AS numDone,
	               Ifnull(b.numTaskDone, 0) / Count(*) AS finPercent
	        FROM   tp_team_plan a
	               LEFT JOIN (SELECT PL_MEMBER_NO,
	                                 Count(*) numTaskDone
	                          FROM   tp_team_plan
	                          WHERE  pl_status = '4'
	                          GROUP  BY PL_MEMBER_NO) b
	                 ON a.PL_MEMBER_NO = b.PL_MEMBER_NO
	        WHERE  a.PL_TEAM_ID IN (SELECT c.TEAM_ID
	                                FROM   tp_practice_team AS c
	                                WHERE  c.TEAM_PRAC_ID = #{pracId,jdbcType=INTEGER})
	        GROUP  BY a.PL_MEMBER_NO
	        ORDER  BY finPercent DESC) d
	WHERE  Round(d.finPercent, 4) > Round((SELECT Ifnull((SELECT Count(*)
	                                      FROM   tp_team_plan
	                                      WHERE  PL_MEMBER_NO = #{stuNo,jdbcType=INTEGER}
	                                             AND pl_status = '4'
	                                      GROUP  BY PL_MEMBER_NO), 0) / Count(*) AS finPercent
	                       FROM   tp_team_plan
	                       WHERE  PL_MEMBER_NO = #{stuNo,jdbcType=INTEGER}
	                       GROUP  BY PL_MEMBER_NO), 4) 
  </select>
  <select id="getTeamPerProgressRanking" resultMap="ResultMapProgressRanking" parameterType="java.lang.Integer" >
	SELECT
		d.TPM_MEMBER_NO AS ID,
		STU_NAME AS NAME,
		Count(*) AS numALL,
		Ifnull(b.numTaskDone, 0) AS numDone,
		SUM(Ifnull(a.PL_FINISH_PERCENT, 0)*Ifnull(TASK_SCORE, 0))/100.0 AS finPercent
	FROM
		tp_team_plan a
	INNER JOIN tp_pro_task ON a.PL_TASK_ID = TASK_ID
	INNER JOIN tp_team_plan_member d ON d.TPM_PLAN_ID = a.PL_PLAN_ID
	INNER JOIN tp_student ON STU_NO = d.TPM_MEMBER_NO
	LEFT JOIN (
		SELECT
			TPM_MEMBER_NO,
			Count(*) numTaskDone
		FROM
			tp_team_plan
		INNER JOIN tp_team_plan_member ON TPM_PLAN_ID = PL_PLAN_ID
		WHERE
		PL_TEAM_ID = #{teamId,jdbcType=INTEGER}
		and	pl_status = '4'
		GROUP BY
			TPM_MEMBER_NO
	) b ON d.TPM_MEMBER_NO = b.TPM_MEMBER_NO
	WHERE PL_TEAM_ID = #{teamId,jdbcType=INTEGER}
	GROUP BY
		d.TPM_MEMBER_NO
	ORDER BY
		finPercent DESC
  </select>
  <select id="getTeamPerRank" resultType="java.lang.Integer" parameterType="map" >
	SELECT Ifnull(Count(*), 0) AS rank
	FROM   (SELECT a.PL_MEMBER_NO                      AS ID,
	               (SELECT STU_NAME
	                FROM   tp_student
	                WHERE  STU_NO = a.PL_MEMBER_NO)    AS NAME,
	               Count(*)                            AS numALL,
	               Ifnull(b.numTaskDone, 0)            AS numDone,
	               Ifnull(b.numTaskDone, 0) / Count(*) AS finPercent
	        FROM   tp_team_plan a
	               LEFT JOIN (SELECT PL_MEMBER_NO,
	                                 Count(*) numTaskDone
	                          FROM   tp_team_plan
	                          WHERE  pl_status = '4'
	                          GROUP  BY PL_MEMBER_NO) b
	                 ON a.PL_MEMBER_NO = b.PL_MEMBER_NO
	        WHERE  a.PL_TEAM_ID = #{teamId,jdbcType=INTEGER}
	        GROUP  BY a.PL_MEMBER_NO
	        ORDER  BY finPercent DESC) d
	WHERE  Round(d.finPercent, 4) > Round((SELECT Ifnull((SELECT Count(*)
	                                      FROM   tp_team_plan
	                                      WHERE  PL_MEMBER_NO = #{stuNo,jdbcType=INTEGER}
	                                             AND pl_status = '4'
	                                      GROUP  BY PL_MEMBER_NO), 0) / Count(*) AS finPercent
	                       FROM   tp_team_plan
	                       WHERE  PL_MEMBER_NO = #{stuNo,jdbcType=INTEGER}
	                       GROUP  BY PL_MEMBER_NO), 4) 
  </select>
  <select id="selectWithTask" resultMap="ResultMapWithTask" parameterType="map" >
  select 
  <include refid="Base_Column_List" />, 
  <include refid="Task_Column_List" />
  from tp_team_plan tp 
  inner join  tp_pro_task pt
  on tp.PL_TASK_ID = pt.TASK_ID
  inner join tp_team_plan_member tpm on tp.PL_PLAN_ID = tpm.TPM_PLAN_ID 
  where tpm.TPM_MEMBER_NO = #{stuNo,jdbcType=INTEGER}
  and tp.PL_TEAM_ID = #{teamId,jdbcType=INTEGER}
  </select>
  <select id="getTeamProgress" resultMap="ResultMapWithStuAndTask" parameterType="java.lang.Integer" >
  select 
  <include refid="Base_Column_List" />, 
  <include refid="Task_Column_List" />,GROUP_CONCAT(STU_NAME) AS STU_NAME
  from tp_team_plan tp, tp_pro_task pt, tp_student s,tp_team_plan_member tpm 
  where tp.PL_TASK_ID = pt.TASK_ID
  and  tp.PL_PLAN_ID = tpm.TPM_PLAN_ID 
  and s.STU_NO= tpm.TPM_MEMBER_NO 
  and tp.PL_TEAM_ID = #{teamId,jdbcType=INTEGER}
  group by tp.PL_PLAN_ID
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chinasofti.cetp.practice.model.TeamPlanExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tp_team_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="getMoreTeamPlan" resultMap="ResultMapWithStuName" parameterType="HashMap" >
    <!-- add by YF -->
    select
    <include refid="Base_Column_List" />
    , STU_NAME
    from tp_team_plan tp,
    tp_student s
    where s.STU_NO= tp.PL_MEMBER_NO
    and tp.PL_TEAM_ID = ${plTeamId} 
    and tp.PL_TASK_ID = ${plTaskId} 
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from tp_team_plan
    where PL_PLAN_ID = #{plPlanId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_team_plan
    where PL_PLAN_ID = #{plPlanId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinasofti.cetp.practice.model.TeamPlanExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_team_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinasofti.cetp.practice.model.TeamPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_team_plan (PL_PLAN_ID, PL_TEAM_ID, PL_MEMBER_NO, 
      PL_TASK_ID, PL_SUGGEST_TIME, PL_SUGGEST_TIME_SUFFIX, 
      PL_PLAN_TIME, PL_PLAN_TIME_SUFFIX, PL_PLAN_START_TIME, 
      PL_PLAN_END_TIME, PL_REAL_TIME, PL_REAL_START_TIME, 
      PL_REAL_END_TIME, PL_STATUS, PL_RESULT, 
      PL_COMMIT_TIME, PL_FINISH_PERCENT, PL_LEADER_SCORE, 
      PL_LEADER_REASON, PL_LEADER_TIME, PL_TEACHER_ID, 
      PL_TEACHER_SCORE, PL_TEACHER_REASON, PL_TEACHER_TIME, 
      PL_USER_NO, PL_REGTIME)
    values (#{plPlanId,jdbcType=INTEGER}, #{plTeamId,jdbcType=INTEGER}, #{plMemberNo,jdbcType=INTEGER}, 
      #{plTaskId,jdbcType=INTEGER}, #{plSuggestTime,jdbcType=INTEGER}, #{plSuggestTimeSuffix,jdbcType=CHAR}, 
      #{plPlanTime,jdbcType=INTEGER}, #{plPlanTimeSuffix,jdbcType=CHAR}, #{plPlanStartTime,jdbcType=TIMESTAMP}, 
      #{plPlanEndTime,jdbcType=TIMESTAMP}, #{plRealTime,jdbcType=INTEGER}, #{plRealStartTime,jdbcType=TIMESTAMP}, 
      #{plRealEndTime,jdbcType=TIMESTAMP}, #{plStatus,jdbcType=CHAR}, #{plResult,jdbcType=VARCHAR}, 
      #{plCommitTime,jdbcType=TIMESTAMP}, #{plFinishPercent,jdbcType=DOUBLE}, #{plLeaderScore,jdbcType=INTEGER}, 
      #{plLeaderReason,jdbcType=VARCHAR}, #{plLeaderTime,jdbcType=TIMESTAMP}, #{plTeacherId,jdbcType=INTEGER}, 
      #{plTeacherScore,jdbcType=INTEGER}, #{plTeacherReason,jdbcType=VARCHAR}, #{plTeacherTime,jdbcType=TIMESTAMP}, 
      #{plUserNo,jdbcType=INTEGER}, #{plRegtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chinasofti.cetp.practice.model.TeamPlan" useGeneratedKeys="true" keyProperty="plPlanId" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_team_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="plPlanId != null" >
        PL_PLAN_ID,
      </if>
      <if test="plTeamId != null" >
        PL_TEAM_ID,
      </if>
      <if test="plMemberNo != null" >
        PL_MEMBER_NO,
      </if>
      <if test="plTaskId != null" >
        PL_TASK_ID,
      </if>
      <if test="plSuggestTime != null" >
        PL_SUGGEST_TIME,
      </if>
      <if test="plSuggestTimeSuffix != null" >
        PL_SUGGEST_TIME_SUFFIX,
      </if>
      <if test="plPlanTime != null" >
        PL_PLAN_TIME,
      </if>
      <if test="plPlanTimeSuffix != null" >
        PL_PLAN_TIME_SUFFIX,
      </if>
      <if test="plPlanStartTime != null" >
        PL_PLAN_START_TIME,
      </if>
      <if test="plPlanEndTime != null" >
        PL_PLAN_END_TIME,
      </if>
      <if test="plRealTime != null" >
        PL_REAL_TIME,
      </if>
      <if test="plRealStartTime != null" >
        PL_REAL_START_TIME,
      </if>
      <if test="plRealEndTime != null" >
        PL_REAL_END_TIME,
      </if>
      <if test="plStatus != null" >
        PL_STATUS,
      </if>
      <if test="plResult != null" >
        PL_RESULT,
      </if>
      <if test="plCommitTime != null" >
        PL_COMMIT_TIME,
      </if>
      <if test="plFinishPercent != null" >
        PL_FINISH_PERCENT,
      </if>
      <if test="plLeaderScore != null" >
        PL_LEADER_SCORE,
      </if>
      <if test="plLeaderReason != null" >
        PL_LEADER_REASON,
      </if>
      <if test="plLeaderTime != null" >
        PL_LEADER_TIME,
      </if>
      <if test="plTeacherId != null" >
        PL_TEACHER_ID,
      </if>
      <if test="plTeacherScore != null" >
        PL_TEACHER_SCORE,
      </if>
      <if test="plTeacherReason != null" >
        PL_TEACHER_REASON,
      </if>
      <if test="plTeacherTime != null" >
        PL_TEACHER_TIME,
      </if>
      <if test="plUserNo != null" >
        PL_USER_NO,
      </if>
      <if test="plRegtime != null" >
        PL_REGTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="plPlanId != null" >
        #{plPlanId,jdbcType=INTEGER},
      </if>
      <if test="plTeamId != null" >
        #{plTeamId,jdbcType=INTEGER},
      </if>
      <if test="plMemberNo != null" >
        #{plMemberNo,jdbcType=INTEGER},
      </if>
      <if test="plTaskId != null" >
        #{plTaskId,jdbcType=INTEGER},
      </if>
      <if test="plSuggestTime != null" >
        #{plSuggestTime,jdbcType=INTEGER},
      </if>
      <if test="plSuggestTimeSuffix != null" >
        #{plSuggestTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="plPlanTime != null" >
        #{plPlanTime,jdbcType=INTEGER},
      </if>
      <if test="plPlanTimeSuffix != null" >
        #{plPlanTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="plPlanStartTime != null" >
        #{plPlanStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plPlanEndTime != null" >
        #{plPlanEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plRealTime != null" >
        #{plRealTime,jdbcType=INTEGER},
      </if>
      <if test="plRealStartTime != null" >
        #{plRealStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plRealEndTime != null" >
        #{plRealEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plStatus != null" >
        #{plStatus,jdbcType=CHAR},
      </if>
      <if test="plResult != null" >
        #{plResult,jdbcType=VARCHAR},
      </if>
      <if test="plCommitTime != null" >
        #{plCommitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plFinishPercent != null" >
        #{plFinishPercent,jdbcType=DOUBLE},
      </if>
      <if test="plLeaderScore != null" >
        #{plLeaderScore,jdbcType=INTEGER},
      </if>
      <if test="plLeaderReason != null" >
        #{plLeaderReason,jdbcType=VARCHAR},
      </if>
      <if test="plLeaderTime != null" >
        #{plLeaderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plTeacherId != null" >
        #{plTeacherId,jdbcType=INTEGER},
      </if>
      <if test="plTeacherScore != null" >
        #{plTeacherScore,jdbcType=INTEGER},
      </if>
      <if test="plTeacherReason != null" >
        #{plTeacherReason,jdbcType=VARCHAR},
      </if>
      <if test="plTeacherTime != null" >
        #{plTeacherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plUserNo != null" >
        #{plUserNo,jdbcType=INTEGER},
      </if>
      <if test="plRegtime != null" >
        #{plRegtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinasofti.cetp.practice.model.TeamPlanExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select count(*) from tp_team_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_team_plan
    <set >
      <if test="record.plPlanId != null" >
        PL_PLAN_ID = #{record.plPlanId,jdbcType=INTEGER},
      </if>
      <if test="record.plTeamId != null" >
        PL_TEAM_ID = #{record.plTeamId,jdbcType=INTEGER},
      </if>
      <if test="record.plMemberNo != null" >
        PL_MEMBER_NO = #{record.plMemberNo,jdbcType=INTEGER},
      </if>
      <if test="record.plTaskId != null" >
        PL_TASK_ID = #{record.plTaskId,jdbcType=INTEGER},
      </if>
      <if test="record.plSuggestTime != null" >
        PL_SUGGEST_TIME = #{record.plSuggestTime,jdbcType=INTEGER},
      </if>
      <if test="record.plSuggestTimeSuffix != null" >
        PL_SUGGEST_TIME_SUFFIX = #{record.plSuggestTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="record.plPlanTime != null" >
        PL_PLAN_TIME = #{record.plPlanTime,jdbcType=INTEGER},
      </if>
      <if test="record.plPlanTimeSuffix != null" >
        PL_PLAN_TIME_SUFFIX = #{record.plPlanTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="record.plPlanStartTime != null" >
        PL_PLAN_START_TIME = #{record.plPlanStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plPlanEndTime != null" >
        PL_PLAN_END_TIME = #{record.plPlanEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plRealTime != null" >
        PL_REAL_TIME = #{record.plRealTime,jdbcType=INTEGER},
      </if>
      <if test="record.plRealStartTime != null" >
        PL_REAL_START_TIME = #{record.plRealStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plRealEndTime != null" >
        PL_REAL_END_TIME = #{record.plRealEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plStatus != null" >
        PL_STATUS = #{record.plStatus,jdbcType=CHAR},
      </if>
      <if test="record.plResult != null" >
        PL_RESULT = #{record.plResult,jdbcType=VARCHAR},
      </if>
      <if test="record.plCommitTime != null" >
        PL_COMMIT_TIME = #{record.plCommitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plFinishPercent != null" >
        PL_FINISH_PERCENT = #{record.plFinishPercent,jdbcType=DOUBLE},
      </if>
      <if test="record.plLeaderScore != null" >
        PL_LEADER_SCORE = #{record.plLeaderScore,jdbcType=INTEGER},
      </if>
      <if test="record.plLeaderReason != null" >
        PL_LEADER_REASON = #{record.plLeaderReason,jdbcType=VARCHAR},
      </if>
      <if test="record.plLeaderTime != null" >
        PL_LEADER_TIME = #{record.plLeaderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plTeacherId != null" >
        PL_TEACHER_ID = #{record.plTeacherId,jdbcType=INTEGER},
      </if>
      <if test="record.plTeacherScore != null" >
        PL_TEACHER_SCORE = #{record.plTeacherScore,jdbcType=INTEGER},
      </if>
      <if test="record.plTeacherReason != null" >
        PL_TEACHER_REASON = #{record.plTeacherReason,jdbcType=VARCHAR},
      </if>
      <if test="record.plTeacherTime != null" >
        PL_TEACHER_TIME = #{record.plTeacherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plUserNo != null" >
        PL_USER_NO = #{record.plUserNo,jdbcType=INTEGER},
      </if>
      <if test="record.plRegtime != null" >
        PL_REGTIME = #{record.plRegtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_team_plan
    set PL_PLAN_ID = #{record.plPlanId,jdbcType=INTEGER},
      PL_TEAM_ID = #{record.plTeamId,jdbcType=INTEGER},
      PL_MEMBER_NO = #{record.plMemberNo,jdbcType=INTEGER},
      PL_TASK_ID = #{record.plTaskId,jdbcType=INTEGER},
      PL_SUGGEST_TIME = #{record.plSuggestTime,jdbcType=INTEGER},
      PL_SUGGEST_TIME_SUFFIX = #{record.plSuggestTimeSuffix,jdbcType=CHAR},
      PL_PLAN_TIME = #{record.plPlanTime,jdbcType=INTEGER},
      PL_PLAN_TIME_SUFFIX = #{record.plPlanTimeSuffix,jdbcType=CHAR},
      PL_PLAN_START_TIME = #{record.plPlanStartTime,jdbcType=TIMESTAMP},
      PL_PLAN_END_TIME = #{record.plPlanEndTime,jdbcType=TIMESTAMP},
      PL_REAL_TIME = #{record.plRealTime,jdbcType=INTEGER},
      PL_REAL_START_TIME = #{record.plRealStartTime,jdbcType=TIMESTAMP},
      PL_REAL_END_TIME = #{record.plRealEndTime,jdbcType=TIMESTAMP},
      PL_STATUS = #{record.plStatus,jdbcType=CHAR},
      PL_RESULT = #{record.plResult,jdbcType=VARCHAR},
      PL_COMMIT_TIME = #{record.plCommitTime,jdbcType=TIMESTAMP},
      PL_FINISH_PERCENT = #{record.plFinishPercent,jdbcType=DOUBLE},
      PL_LEADER_SCORE = #{record.plLeaderScore,jdbcType=INTEGER},
      PL_LEADER_REASON = #{record.plLeaderReason,jdbcType=VARCHAR},
      PL_LEADER_TIME = #{record.plLeaderTime,jdbcType=TIMESTAMP},
      PL_TEACHER_ID = #{record.plTeacherId,jdbcType=INTEGER},
      PL_TEACHER_SCORE = #{record.plTeacherScore,jdbcType=INTEGER},
      PL_TEACHER_REASON = #{record.plTeacherReason,jdbcType=VARCHAR},
      PL_TEACHER_TIME = #{record.plTeacherTime,jdbcType=TIMESTAMP},
      PL_USER_NO = #{record.plUserNo,jdbcType=INTEGER},
      PL_REGTIME = #{record.plRegtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinasofti.cetp.practice.model.TeamPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_team_plan
    <set >
      <if test="plTeamId != null" >
        PL_TEAM_ID = #{plTeamId,jdbcType=INTEGER},
      </if>
      <if test="plMemberNo != null" >
        PL_MEMBER_NO = #{plMemberNo,jdbcType=INTEGER},
      </if>
      <if test="plTaskId != null" >
        PL_TASK_ID = #{plTaskId,jdbcType=INTEGER},
      </if>
      <if test="plSuggestTime != null" >
        PL_SUGGEST_TIME = #{plSuggestTime,jdbcType=INTEGER},
      </if>
      <if test="plSuggestTimeSuffix != null" >
        PL_SUGGEST_TIME_SUFFIX = #{plSuggestTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="plPlanTime != null" >
        PL_PLAN_TIME = #{plPlanTime,jdbcType=INTEGER},
      </if>
      <if test="plPlanTimeSuffix != null" >
        PL_PLAN_TIME_SUFFIX = #{plPlanTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="plPlanStartTime != null" >
        PL_PLAN_START_TIME = #{plPlanStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plPlanEndTime != null" >
        PL_PLAN_END_TIME = #{plPlanEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plRealTime != null" >
        PL_REAL_TIME = #{plRealTime,jdbcType=INTEGER},
      </if>
      <if test="plRealStartTime != null" >
        PL_REAL_START_TIME = #{plRealStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plRealEndTime != null" >
        PL_REAL_END_TIME = #{plRealEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plStatus != null" >
        PL_STATUS = #{plStatus,jdbcType=CHAR},
      </if>
      <if test="plResult != null" >
        PL_RESULT = #{plResult,jdbcType=VARCHAR},
      </if>
      <if test="plCommitTime != null" >
        PL_COMMIT_TIME = #{plCommitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plFinishPercent != null" >
        PL_FINISH_PERCENT = #{plFinishPercent,jdbcType=DOUBLE},
      </if>
      <if test="plLeaderScore != null" >
        PL_LEADER_SCORE = #{plLeaderScore,jdbcType=INTEGER},
      </if>
      <if test="plLeaderReason != null" >
        PL_LEADER_REASON = #{plLeaderReason,jdbcType=VARCHAR},
      </if>
      <if test="plLeaderTime != null" >
        PL_LEADER_TIME = #{plLeaderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plTeacherId != null" >
        PL_TEACHER_ID = #{plTeacherId,jdbcType=INTEGER},
      </if>
      <if test="plTeacherScore != null" >
        PL_TEACHER_SCORE = #{plTeacherScore,jdbcType=INTEGER},
      </if>
      <if test="plTeacherReason != null" >
        PL_TEACHER_REASON = #{plTeacherReason,jdbcType=VARCHAR},
      </if>
      <if test="plTeacherTime != null" >
        PL_TEACHER_TIME = #{plTeacherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plUserNo != null" >
        PL_USER_NO = #{plUserNo,jdbcType=INTEGER},
      </if>
      <if test="plRegtime != null" >
        PL_REGTIME = #{plRegtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where PL_PLAN_ID = #{plPlanId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinasofti.cetp.practice.model.TeamPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_team_plan
    set PL_TEAM_ID = #{plTeamId,jdbcType=INTEGER},
      PL_MEMBER_NO = #{plMemberNo,jdbcType=INTEGER},
      PL_TASK_ID = #{plTaskId,jdbcType=INTEGER},
      PL_SUGGEST_TIME = #{plSuggestTime,jdbcType=INTEGER},
      PL_SUGGEST_TIME_SUFFIX = #{plSuggestTimeSuffix,jdbcType=CHAR},
      PL_PLAN_TIME = #{plPlanTime,jdbcType=INTEGER},
      PL_PLAN_TIME_SUFFIX = #{plPlanTimeSuffix,jdbcType=CHAR},
      PL_PLAN_START_TIME = #{plPlanStartTime,jdbcType=TIMESTAMP},
      PL_PLAN_END_TIME = #{plPlanEndTime,jdbcType=TIMESTAMP},
      PL_REAL_TIME = #{plRealTime,jdbcType=INTEGER},
      PL_REAL_START_TIME = #{plRealStartTime,jdbcType=TIMESTAMP},
      PL_REAL_END_TIME = #{plRealEndTime,jdbcType=TIMESTAMP},
      PL_STATUS = #{plStatus,jdbcType=CHAR},
      PL_RESULT = #{plResult,jdbcType=VARCHAR},
      PL_COMMIT_TIME = #{plCommitTime,jdbcType=TIMESTAMP},
      PL_FINISH_PERCENT = #{plFinishPercent,jdbcType=DOUBLE},
      PL_LEADER_SCORE = #{plLeaderScore,jdbcType=INTEGER},
      PL_LEADER_REASON = #{plLeaderReason,jdbcType=VARCHAR},
      PL_LEADER_TIME = #{plLeaderTime,jdbcType=TIMESTAMP},
      PL_TEACHER_ID = #{plTeacherId,jdbcType=INTEGER},
      PL_TEACHER_SCORE = #{plTeacherScore,jdbcType=INTEGER},
      PL_TEACHER_REASON = #{plTeacherReason,jdbcType=VARCHAR},
      PL_TEACHER_TIME = #{plTeacherTime,jdbcType=TIMESTAMP},
      PL_USER_NO = #{plUserNo,jdbcType=INTEGER},
      PL_REGTIME = #{plRegtime,jdbcType=TIMESTAMP}
    where PL_PLAN_ID = #{plPlanId,jdbcType=INTEGER}
  </update>
  <!-- add by yf 2013-9-25  -->
  <resultMap id="TeamMemberScore" type="com.chinasofti.cetp.practice.model.TeamMemberScore" >
    <id column="stuNo" property="stuNo" jdbcType="INTEGER" />
    <result column="stuName" property="stuName" jdbcType="VARCHAR" />
    <result column="taskNum" property="taskNum" jdbcType="INTEGER" />
    <result column="sumTaskScore" property="sumTaskScore" jdbcType="INTEGER" />
    <result column="sumLeaderScore" property="sumLeaderScore" jdbcType="INTEGER" />
    <result column="sumTeacherScore" property="sumTeacherScore" jdbcType="INTEGER" />
    <result column="teacherName" property="teacherName" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getTeamMemberScore" resultMap="TeamMemberScore" parameterType="java.lang.Integer">
	SELECT TM_MEMBER_NO          AS stuNo,
	       TM_MEMBER_NAME        AS stuName,
	       Count(PL_TASK_ID)     AS taskNum,
	       Sum(TASK_SCORE)       AS sumTaskScore,
	       Sum(PL_LEADER_SCORE)  AS sumLeaderScore,
	       Sum(PL_TEACHER_SCORE) AS sumTeacherScore,
	       MAX(tp_user.USER_NAME)     AS teacherName
	FROM   tp_team_member
		   LEFT JOIN tp_team_plan_member ON TM_MEMBER_NO = TPM_MEMBER_NO
	       LEFT JOIN tp_team_plan
	         ON ( tp_team_member.TM_TEAM_ID = tp_team_plan.PL_TEAM_ID
	              AND TPM_PLAN_ID = PL_PLAN_ID )
	       LEFT JOIN tp_pro_task
	         ON ( tp_team_plan.PL_TASK_ID = tp_pro_task.TASK_ID )
	       LEFT JOIN tp_user
	         ON( tp_team_plan.PL_TEACHER_ID = tp_user.USER_NO )
	WHERE  tp_team_member.TM_TEAM_ID = #{teamId,jdbcType=INTEGER}
	GROUP  BY tp_team_member.TM_MEMBER_NO 
  </select>
  <!-- end -->
</mapper>