<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.cetp.practice.dao.PracPersonMapper" >
  <resultMap id="BaseResultMap" type="com.chinasofti.cetp.practice.model.PracPerson" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <id column="PP_PRAC_ID" property="ppPracId" jdbcType="INTEGER" />
    <id column="PP_PRO_ID" property="ppProId" jdbcType="INTEGER" />
    <id column="PP_STU_ID" property="ppStuId" jdbcType="INTEGER" />
    <result column="PP_HARD_SCORE" property="ppHardScore" jdbcType="INTEGER" />
    <result column="PP_SOFT_SCORE" property="ppSoftScore" jdbcType="INTEGER" />
    <result column="PP_REAL_SCORE" property="ppRealScore" jdbcType="INTEGER" />
    <result column="PP_REGTIME" property="ppRegtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="MorePracPersonMap" type="com.chinasofti.cetp.practice.model.MorePracPerson" >
    <id column="pracId" property="ppPracId" jdbcType="INTEGER" />
    <id column="proId" property="ppProId" jdbcType="INTEGER" />
    <id column="stuNo" property="ppStuId" jdbcType="INTEGER" />
    <result column="proName" property="proName" jdbcType="VARCHAR" />
    <result column="stuName" property="stuName" jdbcType="VARCHAR" />
    <result column="finPercent" property="finPercent" jdbcType="DOUBLE" />
  </resultMap>
  <resultMap id="MoreMorePracPersonMap" type="com.chinasofti.cetp.practice.model.MoreMorePracPerson"  extends="BaseResultMap">
    <result column="PRAC_NAME" property="pracName" jdbcType="VARCHAR" />
    <result column="PRO_NAME" property="proName" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="teacherName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.chinasofti.cetp.practice.model.PracPersonWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <result column="PP_SUMMARY" property="ppSummary" jdbcType="LONGVARCHAR" />
    <result column="PP_EVALUATE" property="ppEvaluate" jdbcType="LONGVARCHAR" />
  </resultMap>
   <resultMap id="ResultMapWithBLOBs1" type="com.chinasofti.cetp.practice.model.MorePracPerson" extends="BaseResultMap" >
   	<result column="PP_SUMMARY" property="ppSummary" jdbcType="LONGVARCHAR" />
    <result column="PP_EVALUATE" property="ppEvaluate" jdbcType="LONGVARCHAR" />
    <result column="PRACNAME" property="pracName" jdbcType="VARCHAR" />
    <result column="STUNAME" property="stuName" jdbcType="VARCHAR" />
    <result column="PRONAME" property="proName" jdbcType="VARCHAR" />
   </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    PP_PRAC_ID, PP_PRO_ID, PP_STU_ID, PP_HARD_SCORE, PP_SOFT_SCORE, PP_REAL_SCORE, PP_REGTIME
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    PP_SUMMARY, PP_EVALUATE
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.chinasofti.cetp.practice.model.PracPersonExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tp_prac_person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chinasofti.cetp.practice.model.PracPersonExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tp_prac_person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="getSummarygriddata" resultMap="ResultMapWithBLOBs1" parameterType="HashMap" >
  	SELECT
	     A.PP_STU_ID PP_STU_ID
	     ,A.PP_REGTIME PP_REGTIME
	     ,B.PRAC_NAME PRACNAME
	     ,C.PRO_NAME PRONAME
	     ,D.STU_NAME STUNAME
	     ,A.PP_SUMMARY PP_SUMMARY
		FROM 
		     tp_prac_person A
		     ,tp_practice B
		     ,tp_pro C
		     ,tp_student D
		WHERE 
		     A.PP_PRAC_ID = B.PRAC_ID
		     AND A.PP_PRO_ID = C.PRO_ID
		     AND A.PP_STU_ID = D.STU_NO
		     AND A.PP_SUMMARY IS NOT NULL
		     <if test="selPPStuId != null" >
		     	AND A.PP_STU_ID LIKE #{selPPStuId}
		     </if>
		     <if test="selStuName != null" >
		     	AND D.STU_NAME LIKE #{selStuName}
		     </if>
		     <if test="selProName != null" >
		     	AND C.PRO_NAME LIKE #{selProName}
		     </if>
		     <if test="selPracName != null" >
		     	AND B.PRAC_NAME LIKE #{selPracName}
		     </if>
		     GROUP BY A.PP_PRAC_ID
	UNION
		SELECT 
		    A.TM_MEMBER_NO PP_STU_ID
		    ,A.TM_REGTIME PP_REGTIME
		    ,C.PRAC_NAME PRACNAME
		    ,D.PRO_NAME PRONAME
		    ,A.TM_MEMBER_NAME STUNAME
		    ,A.TM_SUMMARY PP_SUMMARY
		FROM
		     tp_team_member A
		     ,tp_practice_team B
		     ,tp_practice C
		     ,tp_pro D
		WHERE 
		     A.TM_TEAM_ID = B.TEAM_ID
		     AND B.TEAM_PRAC_ID = C.PRAC_ID
		     AND B.TEAM_PRO_ID =D.PRO_ID
		     AND A.TM_SUMMARY IS NOT NULL
		     <if test="selPPStuId != null" >
		     	AND A.TM_MEMBER_NO LIKE #{selPPStuId}
		     </if>
		     <if test="selStuName != null" >
		     	AND A.TM_MEMBER_NAME LIKE #{selStuName}
		     </if>
		     <if test="selProName != null" >
		     	AND D.PRO_NAME LIKE #{selProName}
		     </if>
		     <if test="selPracName != null" >
		     	AND C.PRAC_NAME LIKE #{selPracName}
		     </if>
			GROUP BY B.TEAM_PRAC_ID 
  	
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="com.chinasofti.cetp.practice.model.PracPersonKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tp_prac_person
    where PP_PRAC_ID = #{ppPracId,jdbcType=INTEGER}
      and PP_PRO_ID = #{ppProId,jdbcType=INTEGER}
      and PP_STU_ID = #{ppStuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.chinasofti.cetp.practice.model.PracPersonKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_prac_person
    where PP_PRAC_ID = #{ppPracId,jdbcType=INTEGER}
      and PP_PRO_ID = #{ppProId,jdbcType=INTEGER}
      and PP_STU_ID = #{ppStuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinasofti.cetp.practice.model.PracPersonExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_prac_person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinasofti.cetp.practice.model.PracPersonWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_prac_person (PP_PRAC_ID, PP_PRO_ID, PP_STU_ID, 
      PP_HARD_SCORE, PP_SOFT_SCORE, PP_REAL_SCORE, 
      PP_REGTIME, PP_SUMMARY, PP_EVALUATE
      )
    values (#{ppPracId,jdbcType=INTEGER}, #{ppProId,jdbcType=INTEGER}, #{ppStuId,jdbcType=INTEGER}, 
      #{ppHardScore,jdbcType=INTEGER}, #{ppSoftScore,jdbcType=INTEGER}, #{ppRealScore,jdbcType=INTEGER}, 
      #{ppRegtime,jdbcType=TIMESTAMP}, #{ppSummary,jdbcType=LONGVARCHAR}, #{ppEvaluate,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chinasofti.cetp.practice.model.PracPersonWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_prac_person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ppPracId != null" >
        PP_PRAC_ID,
      </if>
      <if test="ppProId != null" >
        PP_PRO_ID,
      </if>
      <if test="ppStuId != null" >
        PP_STU_ID,
      </if>
      <if test="ppHardScore != null" >
        PP_HARD_SCORE,
      </if>
      <if test="ppSoftScore != null" >
        PP_SOFT_SCORE,
      </if>
      <if test="ppRealScore != null" >
        PP_REAL_SCORE,
      </if>
      <if test="ppRegtime != null" >
        PP_REGTIME,
      </if>
      <if test="ppSummary != null" >
        PP_SUMMARY,
      </if>
      <if test="ppEvaluate != null" >
        PP_EVALUATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ppPracId != null" >
        #{ppPracId,jdbcType=INTEGER},
      </if>
      <if test="ppProId != null" >
        #{ppProId,jdbcType=INTEGER},
      </if>
      <if test="ppStuId != null" >
        #{ppStuId,jdbcType=INTEGER},
      </if>
      <if test="ppHardScore != null" >
        #{ppHardScore,jdbcType=INTEGER},
      </if>
      <if test="ppSoftScore != null" >
        #{ppSoftScore,jdbcType=INTEGER},
      </if>
      <if test="ppRealScore != null" >
        #{ppRealScore,jdbcType=INTEGER},
      </if>
      <if test="ppRegtime != null" >
        now(),
      </if>
      <if test="ppSummary != null" >
        #{ppSummary,jdbcType=LONGVARCHAR},
      </if>
      <if test="ppEvaluate != null" >
        #{ppEvaluate,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinasofti.cetp.practice.model.PracPersonExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select count(*) from tp_prac_person
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_prac_person
    <set >
      <if test="record.ppPracId != null" >
        PP_PRAC_ID = #{record.ppPracId,jdbcType=INTEGER},
      </if>
      <if test="record.ppProId != null" >
        PP_PRO_ID = #{record.ppProId,jdbcType=INTEGER},
      </if>
      <if test="record.ppStuId != null" >
        PP_STU_ID = #{record.ppStuId,jdbcType=INTEGER},
      </if>
      <if test="record.ppHardScore != null" >
        PP_HARD_SCORE = #{record.ppHardScore,jdbcType=INTEGER},
      </if>
      <if test="record.ppSoftScore != null" >
        PP_SOFT_SCORE = #{record.ppSoftScore,jdbcType=INTEGER},
      </if>
      <if test="record.ppRealScore != null" >
        PP_REAL_SCORE = #{record.ppRealScore,jdbcType=INTEGER},
      </if>
      <if test="record.ppRegtime != null" >
        PP_REGTIME = #{record.ppRegtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ppSummary != null" >
        PP_SUMMARY = #{record.ppSummary,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ppEvaluate != null" >
        PP_EVALUATE = #{record.ppEvaluate,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_prac_person
    set PP_PRAC_ID = #{record.ppPracId,jdbcType=INTEGER},
      PP_PRO_ID = #{record.ppProId,jdbcType=INTEGER},
      PP_STU_ID = #{record.ppStuId,jdbcType=INTEGER},
      PP_HARD_SCORE = #{record.ppHardScore,jdbcType=INTEGER},
      PP_SOFT_SCORE = #{record.ppSoftScore,jdbcType=INTEGER},
      PP_REAL_SCORE = #{record.ppRealScore,jdbcType=INTEGER},
      PP_REGTIME = #{record.ppRegtime,jdbcType=TIMESTAMP},
      PP_SUMMARY = #{record.ppSummary,jdbcType=LONGVARCHAR},
      PP_EVALUATE = #{record.ppEvaluate,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_prac_person
    set PP_PRAC_ID = #{record.ppPracId,jdbcType=INTEGER},
      PP_PRO_ID = #{record.ppProId,jdbcType=INTEGER},
      PP_STU_ID = #{record.ppStuId,jdbcType=INTEGER},
      PP_HARD_SCORE = #{record.ppHardScore,jdbcType=INTEGER},
      PP_SOFT_SCORE = #{record.ppSoftScore,jdbcType=INTEGER},
      PP_REAL_SCORE = #{record.ppRealScore,jdbcType=INTEGER},
      PP_REGTIME = #{record.ppRegtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinasofti.cetp.practice.model.PracPersonWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_prac_person
    <set >
      <if test="ppHardScore != null" >
        PP_HARD_SCORE = #{ppHardScore,jdbcType=INTEGER},
      </if>
      <if test="ppSoftScore != null" >
        PP_SOFT_SCORE = #{ppSoftScore,jdbcType=INTEGER},
      </if>
      <if test="ppRealScore != null" >
        PP_REAL_SCORE = #{ppRealScore,jdbcType=INTEGER},
      </if>
      <if test="ppRegtime != null" >
        PP_REGTIME = #{ppRegtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ppSummary != null" >
        PP_SUMMARY = #{ppSummary,jdbcType=LONGVARCHAR},
      </if>
      <if test="ppEvaluate != null" >
        PP_EVALUATE = #{ppEvaluate,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where PP_PRAC_ID = #{ppPracId,jdbcType=INTEGER}
      and PP_PRO_ID = #{ppProId,jdbcType=INTEGER}
      and PP_STU_ID = #{ppStuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chinasofti.cetp.practice.model.PracPersonWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_prac_person
    set PP_HARD_SCORE = #{ppHardScore,jdbcType=INTEGER},
      PP_SOFT_SCORE = #{ppSoftScore,jdbcType=INTEGER},
      PP_REAL_SCORE = #{ppRealScore,jdbcType=INTEGER},
      PP_REGTIME = #{ppRegtime,jdbcType=TIMESTAMP},
      PP_SUMMARY = #{ppSummary,jdbcType=LONGVARCHAR},
      PP_EVALUATE = #{ppEvaluate,jdbcType=LONGVARCHAR}
    where PP_PRAC_ID = #{ppPracId,jdbcType=INTEGER}
      and PP_PRO_ID = #{ppProId,jdbcType=INTEGER}
      and PP_STU_ID = #{ppStuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinasofti.cetp.practice.model.PracPerson" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_prac_person
    set PP_HARD_SCORE = #{ppHardScore,jdbcType=INTEGER},
      PP_SOFT_SCORE = #{ppSoftScore,jdbcType=INTEGER},
      PP_REAL_SCORE = #{ppRealScore,jdbcType=INTEGER},
      PP_REGTIME = #{ppRegtime,jdbcType=TIMESTAMP}
    where PP_PRAC_ID = #{ppPracId,jdbcType=INTEGER}
      and PP_PRO_ID = #{ppProId,jdbcType=INTEGER}
      and PP_STU_ID = #{ppStuId,jdbcType=INTEGER}
  </update>
  
  <insert id="insPersonPractice" parameterType="HashMap" >
    insert into tp_prac_person 
    										(PP_PRAC_ID
    										, PP_PRO_ID
    										, PP_STU_ID
    										,PP_REGTIME)
								    values (#{pracId,jdbcType=INTEGER}
								    		, #{proId,jdbcType=INTEGER}
								    		, #{studentNumber,jdbcType=INTEGER}
								    		, now() )
  </insert>
 <!-- add by yf -->
  <select id="selectStus" resultMap="MorePracPersonMap" parameterType="map" >
	SELECT tp_practice_class.PC_PRAC_ID                          AS pracId,
	       tp_prac_person.PP_PRO_ID                              AS proId,
	       tp_pro.PRO_NAME                                       AS proName,
	       tp_student.STU_NO                                     AS stuNo,
	       tp_student.STU_NAME                                   AS stuName,
	       (SELECT Sum(PN_FINISH_PERCENT) / Count(0)
	        FROM   tp_person_plan
	        WHERE  tp_person_plan.PN_STU_NO = tp_student.STU_NO) AS finPercent
	FROM   tp_practice_class
	       INNER JOIN tp_student
	         ON tp_practice_class.PC_CLASS_ID = tp_student.STU_CLASS_ID
	       LEFT JOIN tp_prac_person
	         ON ( tp_prac_person.PP_PRAC_ID = tp_practice_class.PC_PRAC_ID
	              AND tp_prac_person.PP_STU_ID = tp_student.STU_NO )
	       LEFT JOIN tp_pro
	         ON tp_prac_person.PP_PRO_ID = tp_pro.PRO_ID
	WHERE  tp_practice_class.PC_PRAC_ID =  #{pracId,jdbcType=INTEGER} 
    <if test="proName != null" >
    AND tp_pro.PRO_NAME LIKE #{proName,jdbcType=VARCHAR} 
    </if>
    <if test="stuNo != null" >
    AND tp_student.STU_NO LIKE #{stuNo,jdbcType=VARCHAR} 
    </if>
    <if test="stuName != null" >
    AND tp_student.STU_NAME LIKE #{stuName,jdbcType=VARCHAR} 
    </if>
  </select>
  <select id="selectStusWithoutProg" resultMap="MorePracPersonMap" parameterType="map" >
	SELECT tp_practice_class.PC_PRAC_ID                          AS pracId,
	       tp_prac_person.PP_PRO_ID                              AS proId,
	       tp_pro.PRO_NAME                                       AS proName,
	       tp_student.STU_NO                                     AS stuNo,
	       tp_student.STU_NAME                                   AS stuName
	FROM   tp_practice_class
	       INNER JOIN tp_student
	         ON tp_practice_class.PC_CLASS_ID = tp_student.STU_CLASS_ID
	       LEFT JOIN tp_prac_person
	         ON ( tp_prac_person.PP_PRAC_ID = tp_practice_class.PC_PRAC_ID
	              AND tp_prac_person.PP_STU_ID = tp_student.STU_NO )
	       LEFT JOIN tp_pro
	         ON tp_prac_person.PP_PRO_ID = tp_pro.PRO_ID
	WHERE  tp_practice_class.PC_PRAC_ID =  #{pracId,jdbcType=INTEGER} 
    <if test="proName != null" >
    AND tp_pro.PRO_NAME LIKE #{proName,jdbcType=VARCHAR} 
    </if>
    <if test="stuNo != null" >
    AND tp_student.STU_NO LIKE #{stuNo,jdbcType=VARCHAR} 
    </if>
    <if test="stuName != null" >
    AND tp_student.STU_NAME LIKE #{stuName,jdbcType=VARCHAR} 
    </if>
  </select>
  <select id="selectMoreMorePracPerson" resultMap="MoreMorePracPersonMap" parameterType="map" >
	SELECT PP_PRAC_ID,
	       PRAC_NAME,
	       PP_PRO_ID,
	       PRO_NAME,
	       PP_STU_ID,
	       PP_HARD_SCORE,
	       PP_SOFT_SCORE,
	       PP_REAL_SCORE,
	       USER_NAME
	FROM   tp_prac_person
	       INNER JOIN tp_practice
	         ON PP_PRAC_ID = PRAC_ID
	       INNER JOIN tp_pro
	         ON PP_PRO_ID = PRO_ID
	       INNER JOIN tp_user
	         ON PRAC_TEACHER = USER_NO
	WHERE  PP_STU_ID = #{stuNo,jdbcType=INTEGER} 
    <if test="proName != null" >
    AND PRO_NAME LIKE #{proName,jdbcType=VARCHAR} 
    </if>
    <if test="pracName != null" >
    AND PRAC_NAME LIKE #{pracName,jdbcType=VARCHAR} 
    </if>
  </select>
  <!-- end -->  
  <!-- add by YF 2014-7-24 -->  
  <select id="getStuForPrac" resultMap="MorePracPersonMap" parameterType="java.lang.Integer">
	SELECT
		PP_PRAC_ID AS pracId,
		PP_PRO_ID AS proId,
		PRO_NAME AS proName,
		STU_NO AS stuNo,
		STU_USERID AS stuName
	FROM
		tp_prac_person
	INNER JOIN tp_student ON PP_STU_ID = STU_NO
	LEFT JOIN tp_pro ON PP_PRO_ID = PRO_ID
	WHERE
		PP_PRAC_ID = #{pracId}  
  </select>
  <!-- add by YF 2014-9-17 -->  
  <select id="getStuPracId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
	SELECT
		PRAC_ID
	FROM
		tp_prac_person
	INNER JOIN tp_practice ON PP_PRAC_ID = PRAC_ID
	WHERE
		PP_STU_ID = #{stuNo}
	AND NOT PRAC_STATUS = '4'
	ORDER BY
		PRAC_START_DATE DESC
	LIMIT 0,1 
  </select>
</mapper>