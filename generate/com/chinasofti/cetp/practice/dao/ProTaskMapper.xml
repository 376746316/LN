<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.cetp.practice.dao.ProTaskMapper" >
  <resultMap id="BaseResultMap" type="com.chinasofti.cetp.practice.model.ProTask" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <id column="TASK_ID" property="taskId" jdbcType="INTEGER" />
    <result column="TASK_PRO_ID" property="taskProId" jdbcType="INTEGER" />
    <result column="TASK_PARENT" property="taskParent" jdbcType="INTEGER" />
    <result column="TASK_NAME" property="taskName" jdbcType="VARCHAR" />
    <result column="TASK_TIME" property="taskTime" jdbcType="INTEGER" />
    <result column="TASK_TIME_SUFFIX" property="taskTimeSuffix" jdbcType="CHAR" />
    <result column="TASK_DIFFCULT" property="taskDiffcult" jdbcType="CHAR" />
    <result column="TASK_SCORE" property="taskScore" jdbcType="INTEGER" />
    <result column="TASK_IS_MILESTONE" property="taskIsMilestone" jdbcType="CHAR" />
    <result column="TASK_PRE_ID" property="taskPreId" jdbcType="VARCHAR" />
    <result column="TASK_PRIOR" property="taskPrior" jdbcType="CHAR" />
    <result column="TASK_TARGET" property="taskTarget" jdbcType="VARCHAR" />
    <result column="TASK_CONTENT" property="taskContent" jdbcType="VARCHAR" />
    <result column="TASK_PONIT" property="taskPonit" jdbcType="VARCHAR" />
    <result column="TASK_LEVEL" property="taskLevel" jdbcType="INTEGER" />
    <result column="TASK_SEQ" property="taskSeq" jdbcType="INTEGER" />
    <result column="TASK_IS_COMMIT" property="taskIsCommit" jdbcType="CHAR" />
    <result column="TASK_USER_NO" property="taskUserNo" jdbcType="INTEGER" />
    <result column="TASK_REGTIME" property="taskRegtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.chinasofti.cetp.practice.model.ProTask" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <result column="TASK_STEP" property="taskStep" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMapForTree" type="com.chinasofti.cetp.practice.model.TreeProTask" extends="BaseResultMap" >
  </resultMap>
  <resultMap id="ResultMapForTree1" type="com.chinasofti.cetp.practice.model.MoreProTask" extends="BaseResultMap" >
     <result column="PL_PLAN_ID" property="plPlanId" jdbcType="INTEGER" />
  	 <result column="PL_TEAM_ID" property="plTeamId" jdbcType="INTEGER" />
  	 <result column="PL_LEADER_SCORE" property="plLeaderScore" jdbcType="INTEGER" />
  	 <result column="PL_TEACHER_SCORE" property="plTeacherScore" jdbcType="INTEGER" />
  	 <result column="PL_TEACHER_REASON" property="plTeacherReason" jdbcType="VARCHAR" />
  	 <result column="TPC_SCORE" property="tpcScore" jdbcType="INTEGER" />
  	 <result column="TPC_ADD_SCORE" property="tpcAddScore" jdbcType="INTEGER" />
  	 <result column="TPC_ADD_REASON" property="tpcAddReason" jdbcType="VARCHAR" />
  	 <result column="STU_NAME" property="stuName" jdbcType="VARCHAR" />
  	 <result column="PN_PLAN_ID" property="pnPlanId" jdbcType="INTEGER" />
  	 <result column="STU_NO" property="stuNo" jdbcType="INTEGER" />
  	 <result column="PN_TEACHER_SCORE" property="pnTeacherScore" jdbcType="INTEGER" />
  	 <result column="PN_TEACHER_REASON" property="pnTeacherReason" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapForMoreTree" type="com.chinasofti.cetp.practice.model.MoreTreeProTask" extends="BaseResultMap" >
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TASK_ID, TASK_PRO_ID, TASK_PARENT, TASK_NAME, TASK_TIME, TASK_TIME_SUFFIX, TASK_DIFFCULT, 
    TASK_SCORE, TASK_IS_MILESTONE, TASK_PRE_ID, TASK_PRIOR, TASK_TARGET, TASK_CONTENT, 
    TASK_PONIT, TASK_LEVEL, TASK_SEQ, TASK_IS_COMMIT, TASK_USER_NO, TASK_REGTIME
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    TASK_STEP
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.chinasofti.cetp.practice.model.ProTaskExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tp_pro_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chinasofti.cetp.practice.model.ProTaskExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tp_pro_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectTreeByExample" resultMap="ResultMapForTree" parameterType="com.chinasofti.cetp.practice.model.ProTaskExample" >
    <!-- add by yf -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tp_pro_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
   <select id="selectTree" resultMap="ResultMapForTree1" parameterType="com.chinasofti.cetp.practice.model.MoreProTask" >
		   SELECT DISTINCT
			TASK_ID,
			TASK_PRO_ID,
			TASK_PARENT,
			TASK_NAME,
			TASK_TIME,
			TASK_DIFFCULT,
			TASK_SCORE,
			TASK_IS_MILESTONE,
			TASK_PRE_ID,
			TASK_PRIOR,
			TASK_TARGET,
			TASK_CONTENT,
			TASK_PONIT,
			TASK_LEVEL,
			TASK_SEQ,
			TASK_IS_COMMIT,
			TASK_USER_NO,
			TASK_REGTIME,
			STU_NAME,
			PL_PLAN_ID,
			PL_TEAM_ID,
			PL_LEADER_SCORE
		FROM
				(SELECT DISTINCT
					TASK_ID,
					TASK_PRO_ID,
					TASK_PARENT,
					TASK_NAME,
					TASK_TIME,
					TASK_DIFFCULT,
					TASK_SCORE,
					TASK_IS_MILESTONE,
					TASK_PRE_ID,
					TASK_PRIOR,
					TASK_TARGET,
					TASK_CONTENT,
					TASK_PONIT,
					TASK_LEVEL,
					TASK_SEQ,
					TASK_IS_COMMIT,
					TASK_USER_NO,
					TASK_REGTIME
				FROM
					tp_pro_task
				where 
					1=1
					<if test="taskProId != null" >
				    	and TASK_PRO_ID = #{taskProId}
				     </if>
				    <if test="taskParent != null" >
				    	and TASK_PARENT = #{taskParent}
				    </if>
				    <if test="taskParent == null" >
				    	and TASK_PARENT is null
				    </if>) a
		    left join 
		     (select 
		        PL_LEADER_SCORE,
		        PL_PLAN_ID,
		        PL_TASK_ID,
		        PL_TEAM_ID,
		        GROUP_CONCAT(STU_NAME) AS STU_NAME
		      from 
		        tp_team_plan
		     inner join tp_team_plan_member on PL_PLAN_ID = TPM_PLAN_ID 
		     inner join tp_student on  TPM_MEMBER_NO = STU_NO
				WHERE
		      PL_TEAM_ID = #{plTeamId}
		     group by PL_PLAN_ID
		      ) b
			on 
		        a.TASK_ID = b.PL_TASK_ID
	ORDER BY TASK_SEQ ASC 
  </select>
  <select id="selectTree1" resultMap="ResultMapForTree1" parameterType="com.chinasofti.cetp.practice.model.MoreProTask" >
		   SELECT DISTINCT
			TASK_ID,
			TASK_PRO_ID,
			TASK_PARENT,
			TASK_NAME,
			TASK_TIME,
			TASK_DIFFCULT,
			TASK_SCORE,
			TASK_IS_MILESTONE,
			TASK_PRE_ID,
			TASK_PRIOR,
			TASK_TARGET,
			TASK_CONTENT,
			TASK_PONIT,
			TASK_LEVEL,
			TASK_SEQ,
			TASK_IS_COMMIT,
			TASK_USER_NO,
			TASK_REGTIME,
			STU_NAME,
			PL_PLAN_ID,
			PL_TEAM_ID,
			PL_LEADER_SCORE,
			PL_TEACHER_SCORE,
			PL_TEACHER_REASON,
			TPC_SCORE,
			TPC_ADD_SCORE,
			TPC_ADD_REASON
		FROM
				(SELECT DISTINCT
					TASK_ID,
					TASK_PRO_ID,
					TASK_PARENT,
					TASK_NAME,
					TASK_TIME,
					TASK_DIFFCULT,
					TASK_SCORE,
					TASK_IS_MILESTONE,
					TASK_PRE_ID,
					TASK_PRIOR,
					TASK_TARGET,
					TASK_CONTENT,
					TASK_PONIT,
					TASK_LEVEL,
					TASK_SEQ,
					TASK_IS_COMMIT,
					TASK_USER_NO,
					TASK_REGTIME
				FROM
					tp_pro_task
				where 
					1=1
					<if test="taskProId != null" >
				    	and TASK_PRO_ID = #{taskProId}
				     </if>
				    <if test="taskParent != null" >
				    	and TASK_PARENT = #{taskParent}
				    </if>
				    <if test="taskParent == null" >
				    	and TASK_PARENT is null
				    </if>) a
		    left join 
		     (select 
		        PL_LEADER_SCORE,
		        PL_TEACHER_SCORE,
		        PL_TEACHER_REASON,
		        PL_PLAN_ID,
		        PL_TASK_ID,
		        PL_TEAM_ID,
		        GROUP_CONCAT(STU_NAME) AS STU_NAME
		      from 
		        tp_team_plan
		     inner join tp_team_plan_member on PL_PLAN_ID = TPM_PLAN_ID 
		     inner join tp_student on  TPM_MEMBER_NO = STU_NO
				WHERE
		      PL_TEAM_ID = #{plTeamId}
		     group by PL_PLAN_ID
		      ) b
			on 
		        a.TASK_ID = b.PL_TASK_ID
		   left join
		   	tp_team_phase_check
		   on (
		   		TPC_TASK_ID = a.TASK_ID
		   		and TPC_TEAM_ID = #{plTeamId}
		   )
	ORDER BY TASK_SEQ ASC
  </select>
  <select id="selectTree2" resultMap="ResultMapForTree1" parameterType="com.chinasofti.cetp.practice.model.MoreProTask" >
		   SELECT DISTINCT
			TASK_ID,
			TASK_PRO_ID,
			TASK_PARENT,
			TASK_NAME,
			TASK_TIME,
			TASK_DIFFCULT,
			TASK_SCORE,
			TASK_IS_MILESTONE,
			TASK_PRE_ID,
			TASK_PRIOR,
			TASK_TARGET,
			TASK_CONTENT,
			TASK_PONIT,
			TASK_LEVEL,
			TASK_SEQ,
			TASK_IS_COMMIT,
			TASK_USER_NO,
			TASK_REGTIME,
			STU_NAME,
			PN_PLAN_ID,
			STU_NO,
			PN_TEACHER_SCORE,
			PN_TEACHER_REASON
		FROM
				(SELECT DISTINCT
					TASK_ID,
					TASK_PRO_ID,
					TASK_PARENT,
					TASK_NAME,
					TASK_TIME,
					TASK_DIFFCULT,
					TASK_SCORE,
					TASK_IS_MILESTONE,
					TASK_PRE_ID,
					TASK_PRIOR,
					TASK_TARGET,
					TASK_CONTENT,
					TASK_PONIT,
					TASK_LEVEL,
					TASK_SEQ,
					TASK_IS_COMMIT,
					TASK_USER_NO,
					TASK_REGTIME
				FROM
					tp_pro_task
				where 
					1=1
					<if test="taskProId != null" >
				    	and TASK_PRO_ID = #{taskProId}
				     </if>
				    <if test="taskParent != null" >
				    	and TASK_PARENT = #{taskParent}
				    </if>
				    <if test="taskParent == null" >
				    	and TASK_PARENT is null
				    </if>) a
		    left join 
		     (select 
		        PN_TEACHER_SCORE,
		        PN_TEACHER_REASON,
		        PN_PLAN_ID,
		        PN_TASK_ID,
		        STU_NO,
		        STU_NAME
		      from 
		        TP_PERSON_PLAN
		     left join 
		       tp_student
		    on
		       PN_STU_NO = STU_NO
				WHERE
		      STU_NO = #{stuNo}) b
			on 
		        a.TASK_ID = b.PN_TASK_ID
	ORDER BY TASK_SEQ ASC 
  </select>
   <select id="selectTask" resultMap="ResultMapForTree1" parameterType="com.chinasofti.cetp.practice.model.MoreProTask" >
	    select 
		     PL_PLAN_ID
		     ,TASK_SCORE
		from 
		     tp_team_plan
		     ,tp_pro_task
		where 
		    PL_TASK_ID = TASK_ID
		    and TASK_PARENT =#{taskId}
		    and PL_TEAM_ID = #{plTeamId}
  </select>
  <select id="selectTask1" resultMap="ResultMapForTree1" parameterType="com.chinasofti.cetp.practice.model.MoreProTask" >
	    select 
		     PN_PLAN_ID
		     ,TASK_SCORE
		from 
		     TP_PERSON_PLAN
		     ,tp_pro_task
		where 
		    PN_TASK_ID = TASK_ID
		    and TASK_PARENT =#{taskId}
		    and PN_STU_NO = #{stuNo}
  </select>
  <update id="updateScore" parameterType="com.chinasofti.cetp.practice.model.MoreProTask">
  	update 
      tp_prac_person
	set 
	      PP_REAL_SCORE = #{pnTeacherScore,jdbcType=INTEGER}
	where 
	      PP_STU_ID = #{stuNo}
	      and PP_PRO_ID = #{taskProId}
  </update>
  <update id="insSaveTaskScore" parameterType="com.chinasofti.cetp.practice.model.MoreProTask">
  		update
  		      TP_TEAM_PLAN
  		   set
  		      PL_LEADER_SCORE = #{plLeaderScore,jdbcType=INTEGER}
  		      ,PL_LEADER_REASON = #{plLeaderReason,jdbcType=INTEGER}
  		      ,PL_LEADER_TIME = now()
  		   where
  		       PL_PLAN_ID = #{plPlanId,jdbcType=INTEGER}
  </update>
  <select id="selTaskScore" resultType="java.lang.Integer" parameterType="com.chinasofti.cetp.practice.model.MoreProTask">
  	select
  	      count(*)
  	from 
  	      TP_TEAM_PHASE_CHECK
    where 
          TPC_TEAM_ID = #{plTeamId}
          and TPC_TASK_ID = #{taskId}
  </select>
  <insert id="insSaveStepTaskScore" parameterType="com.chinasofti.cetp.practice.model.MoreProTask">
  	insert into
  	           TP_TEAM_PHASE_CHECK(
  	           						TPC_TEAM_ID
  	           						,TPC_TASK_ID
  	           						,TPC_SCORE
  	           						,TPC_USER_NO
  	           						,TPC_REGTIME)
  	                      values(
  	                               #{plTeamId,jdbcType=INTEGER}
  	                               ,#{taskId,jdbcType=INTEGER}
  	                               ,#{plLeaderScore,jdbcType=INTEGER}
  	                               ,#{taskUserNo,jdbcType=INTEGER}
  	                               ,now()
  	                            )
  </insert>
  <update id="updSaveStepTaskScore" parameterType="com.chinasofti.cetp.practice.model.MoreProTask">
  	update
  	      TP_TEAM_PHASE_CHECK 
  	set
  	      TPC_SCORE = #{plLeaderScore,jdbcType=INTEGER}
  	      ,TPC_USER_NO=#{taskUserNo,jdbcType=INTEGER}
  	      ,TPC_REGTIME = now()
  	where
  	      TPC_TEAM_ID = #{plTeamId}
          and TPC_TASK_ID = #{taskId}    
  </update>
  <update id="insSaveTaskScore1" parameterType="com.chinasofti.cetp.practice.model.MoreProTask">
  		update
  		      TP_PERSON_PLAN
  		   set
  		      PN_TEACHER_ID = #{pnTeacherId,jdbcType=INTEGER}
  		      ,PN_TEACHER_SCORE = #{pnTeacherScore,jdbcType=INTEGER}
  		      ,PN_TEACHER_REASON = #{pnTeacherReason,jdbcType=VARCHAR}
  		      ,PN_TEACHER_TIME = now()
  		   where
  		       PN_PLAN_ID = #{pnPlanId,jdbcType=INTEGER}
  </update>
  <select id="selectMoreTreeByExample" resultMap="ResultMapForMoreTree" parameterType="com.chinasofti.cetp.practice.model.ProTaskExample" >
    <!-- add by yf -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tp_pro_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tp_pro_task
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_pro_task
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinasofti.cetp.practice.model.ProTaskExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_pro_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinasofti.cetp.practice.model.ProTask" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_pro_task (TASK_ID, TASK_PRO_ID, TASK_PARENT, 
      TASK_NAME, TASK_TIME, TASK_TIME_SUFFIX, 
      TASK_DIFFCULT, TASK_SCORE, TASK_IS_MILESTONE, 
      TASK_PRE_ID, TASK_PRIOR, TASK_TARGET, 
      TASK_CONTENT, TASK_PONIT, TASK_LEVEL, 
      TASK_SEQ, TASK_IS_COMMIT, TASK_USER_NO, 
      TASK_REGTIME, TASK_STEP)
    values (#{taskId,jdbcType=INTEGER}, #{taskProId,jdbcType=INTEGER}, #{taskParent,jdbcType=INTEGER}, 
      #{taskName,jdbcType=VARCHAR}, #{taskTime,jdbcType=INTEGER}, #{taskTimeSuffix,jdbcType=CHAR}, 
      #{taskDiffcult,jdbcType=CHAR}, #{taskScore,jdbcType=INTEGER}, #{taskIsMilestone,jdbcType=CHAR}, 
      #{taskPreId,jdbcType=VARCHAR}, #{taskPrior,jdbcType=CHAR}, #{taskTarget,jdbcType=VARCHAR}, 
      #{taskContent,jdbcType=VARCHAR}, #{taskPonit,jdbcType=VARCHAR}, #{taskLevel,jdbcType=INTEGER}, 
      #{taskSeq,jdbcType=INTEGER}, #{taskIsCommit,jdbcType=CHAR}, #{taskUserNo,jdbcType=INTEGER}, 
      #{taskRegtime,jdbcType=TIMESTAMP}, #{taskStep,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chinasofti.cetp.practice.model.ProTask" useGeneratedKeys="true" keyProperty="taskId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_pro_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        TASK_ID,
      </if>
      <if test="taskProId != null" >
        TASK_PRO_ID,
      </if>
      <if test="taskParent != null" >
        TASK_PARENT,
      </if>
      <if test="taskName != null" >
        TASK_NAME,
      </if>
      <if test="taskTime != null" >
        TASK_TIME,
      </if>
      <if test="taskTimeSuffix != null" >
        TASK_TIME_SUFFIX,
      </if>
      <if test="taskDiffcult != null" >
        TASK_DIFFCULT,
      </if>
      <if test="taskScore != null" >
        TASK_SCORE,
      </if>
      <if test="taskIsMilestone != null" >
        TASK_IS_MILESTONE,
      </if>
      <if test="taskPreId != null" >
        TASK_PRE_ID,
      </if>
      <if test="taskPrior != null" >
        TASK_PRIOR,
      </if>
      <if test="taskTarget != null" >
        TASK_TARGET,
      </if>
      <if test="taskContent != null" >
        TASK_CONTENT,
      </if>
      <if test="taskPonit != null" >
        TASK_PONIT,
      </if>
      <if test="taskLevel != null" >
        TASK_LEVEL,
      </if>
      <if test="taskSeq != null" >
        TASK_SEQ,
      </if>
      <if test="taskIsCommit != null" >
        TASK_IS_COMMIT,
      </if>
      <if test="taskUserNo != null" >
        TASK_USER_NO,
      </if>
      <if test="taskRegtime != null" >
        TASK_REGTIME,
      </if>
      <if test="taskStep != null" >
        TASK_STEP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskProId != null" >
        #{taskProId,jdbcType=INTEGER},
      </if>
      <if test="taskParent != null" >
        #{taskParent,jdbcType=INTEGER},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskTime != null" >
        #{taskTime,jdbcType=INTEGER},
      </if>
      <if test="taskTimeSuffix != null" >
        #{taskTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="taskDiffcult != null" >
        #{taskDiffcult,jdbcType=CHAR},
      </if>
      <if test="taskScore != null" >
        #{taskScore,jdbcType=INTEGER},
      </if>
      <if test="taskIsMilestone != null" >
        #{taskIsMilestone,jdbcType=CHAR},
      </if>
      <if test="taskPreId != null" >
        #{taskPreId,jdbcType=VARCHAR},
      </if>
      <if test="taskPrior != null" >
        #{taskPrior,jdbcType=CHAR},
      </if>
      <if test="taskTarget != null" >
        #{taskTarget,jdbcType=VARCHAR},
      </if>
      <if test="taskContent != null" >
        #{taskContent,jdbcType=VARCHAR},
      </if>
      <if test="taskPonit != null" >
        #{taskPonit,jdbcType=VARCHAR},
      </if>
      <if test="taskLevel != null" >
        #{taskLevel,jdbcType=INTEGER},
      </if>
      <if test="taskSeq != null" >
        #{taskSeq,jdbcType=INTEGER},
      </if>
      <if test="taskIsCommit != null" >
        #{taskIsCommit,jdbcType=CHAR},
      </if>
      <if test="taskUserNo != null" >
        #{taskUserNo,jdbcType=INTEGER},
      </if>
      <if test="taskRegtime != null" >
        #{taskRegtime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskStep != null" >
        #{taskStep,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinasofti.cetp.practice.model.ProTaskExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select count(*) from tp_pro_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_pro_task
    <set >
      <if test="record.taskId != null" >
        TASK_ID = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.taskProId != null" >
        TASK_PRO_ID = #{record.taskProId,jdbcType=INTEGER},
      </if>
      <if test="record.taskParent != null" >
        TASK_PARENT = #{record.taskParent,jdbcType=INTEGER},
      </if>
      <if test="record.taskName != null" >
        TASK_NAME = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskTime != null" >
        TASK_TIME = #{record.taskTime,jdbcType=INTEGER},
      </if>
      <if test="record.taskTimeSuffix != null" >
        TASK_TIME_SUFFIX = #{record.taskTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="record.taskDiffcult != null" >
        TASK_DIFFCULT = #{record.taskDiffcult,jdbcType=CHAR},
      </if>
      <if test="record.taskScore != null" >
        TASK_SCORE = #{record.taskScore,jdbcType=INTEGER},
      </if>
      <if test="record.taskIsMilestone != null" >
        TASK_IS_MILESTONE = #{record.taskIsMilestone,jdbcType=CHAR},
      </if>
      <if test="record.taskPreId != null" >
        TASK_PRE_ID = #{record.taskPreId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskPrior != null" >
        TASK_PRIOR = #{record.taskPrior,jdbcType=CHAR},
      </if>
      <if test="record.taskTarget != null" >
        TASK_TARGET = #{record.taskTarget,jdbcType=VARCHAR},
      </if>
      <if test="record.taskContent != null" >
        TASK_CONTENT = #{record.taskContent,jdbcType=VARCHAR},
      </if>
      <if test="record.taskPonit != null" >
        TASK_PONIT = #{record.taskPonit,jdbcType=VARCHAR},
      </if>
      <if test="record.taskLevel != null" >
        TASK_LEVEL = #{record.taskLevel,jdbcType=INTEGER},
      </if>
      <if test="record.taskSeq != null" >
        TASK_SEQ = #{record.taskSeq,jdbcType=INTEGER},
      </if>
      <if test="record.taskIsCommit != null" >
        TASK_IS_COMMIT = #{record.taskIsCommit,jdbcType=CHAR},
      </if>
      <if test="record.taskUserNo != null" >
        TASK_USER_NO = #{record.taskUserNo,jdbcType=INTEGER},
      </if>
      <if test="record.taskRegtime != null" >
        TASK_REGTIME = #{record.taskRegtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskStep != null" >
        TASK_STEP = #{record.taskStep,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_pro_task
    set TASK_ID = #{record.taskId,jdbcType=INTEGER},
      TASK_PRO_ID = #{record.taskProId,jdbcType=INTEGER},
      TASK_PARENT = #{record.taskParent,jdbcType=INTEGER},
      TASK_NAME = #{record.taskName,jdbcType=VARCHAR},
      TASK_TIME = #{record.taskTime,jdbcType=INTEGER},
      TASK_TIME_SUFFIX = #{record.taskTimeSuffix,jdbcType=CHAR},
      TASK_DIFFCULT = #{record.taskDiffcult,jdbcType=CHAR},
      TASK_SCORE = #{record.taskScore,jdbcType=INTEGER},
      TASK_IS_MILESTONE = #{record.taskIsMilestone,jdbcType=CHAR},
      TASK_PRE_ID = #{record.taskPreId,jdbcType=VARCHAR},
      TASK_PRIOR = #{record.taskPrior,jdbcType=CHAR},
      TASK_TARGET = #{record.taskTarget,jdbcType=VARCHAR},
      TASK_CONTENT = #{record.taskContent,jdbcType=VARCHAR},
      TASK_PONIT = #{record.taskPonit,jdbcType=VARCHAR},
      TASK_LEVEL = #{record.taskLevel,jdbcType=INTEGER},
      TASK_SEQ = #{record.taskSeq,jdbcType=INTEGER},
      TASK_IS_COMMIT = #{record.taskIsCommit,jdbcType=CHAR},
      TASK_USER_NO = #{record.taskUserNo,jdbcType=INTEGER},
      TASK_REGTIME = #{record.taskRegtime,jdbcType=TIMESTAMP},
      TASK_STEP = #{record.taskStep,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_pro_task
    set TASK_ID = #{record.taskId,jdbcType=INTEGER},
      TASK_PRO_ID = #{record.taskProId,jdbcType=INTEGER},
      TASK_PARENT = #{record.taskParent,jdbcType=INTEGER},
      TASK_NAME = #{record.taskName,jdbcType=VARCHAR},
      TASK_TIME = #{record.taskTime,jdbcType=INTEGER},
      TASK_TIME_SUFFIX = #{record.taskTimeSuffix,jdbcType=CHAR},
      TASK_DIFFCULT = #{record.taskDiffcult,jdbcType=CHAR},
      TASK_SCORE = #{record.taskScore,jdbcType=INTEGER},
      TASK_IS_MILESTONE = #{record.taskIsMilestone,jdbcType=CHAR},
      TASK_PRE_ID = #{record.taskPreId,jdbcType=VARCHAR},
      TASK_PRIOR = #{record.taskPrior,jdbcType=CHAR},
      TASK_TARGET = #{record.taskTarget,jdbcType=VARCHAR},
      TASK_CONTENT = #{record.taskContent,jdbcType=VARCHAR},
      TASK_PONIT = #{record.taskPonit,jdbcType=VARCHAR},
      TASK_LEVEL = #{record.taskLevel,jdbcType=INTEGER},
      TASK_SEQ = #{record.taskSeq,jdbcType=INTEGER},
      TASK_IS_COMMIT = #{record.taskIsCommit,jdbcType=CHAR},
      TASK_USER_NO = #{record.taskUserNo,jdbcType=INTEGER},
      TASK_REGTIME = #{record.taskRegtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinasofti.cetp.practice.model.ProTask" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_pro_task
    <set >
      <if test="taskProId != null" >
        TASK_PRO_ID = #{taskProId,jdbcType=INTEGER},
      </if>
      <if test="taskParent != null" >
        TASK_PARENT = #{taskParent,jdbcType=INTEGER},
      </if>
      <if test="taskName != null" >
        TASK_NAME = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskTime != null" >
        TASK_TIME = #{taskTime,jdbcType=INTEGER},
      </if>
      <if test="taskTimeSuffix != null" >
        TASK_TIME_SUFFIX = #{taskTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="taskDiffcult != null" >
        TASK_DIFFCULT = #{taskDiffcult,jdbcType=CHAR},
      </if>
      <if test="taskScore != null" >
        TASK_SCORE = #{taskScore,jdbcType=INTEGER},
      </if>
      <if test="taskIsMilestone != null" >
        TASK_IS_MILESTONE = #{taskIsMilestone,jdbcType=CHAR},
      </if>
      <if test="taskPreId != null" >
        TASK_PRE_ID = #{taskPreId,jdbcType=VARCHAR},
      </if>
      <if test="taskPrior != null" >
        TASK_PRIOR = #{taskPrior,jdbcType=CHAR},
      </if>
      <if test="taskTarget != null" >
        TASK_TARGET = #{taskTarget,jdbcType=VARCHAR},
      </if>
      <if test="taskContent != null" >
        TASK_CONTENT = #{taskContent,jdbcType=VARCHAR},
      </if>
      <if test="taskPonit != null" >
        TASK_PONIT = #{taskPonit,jdbcType=VARCHAR},
      </if>
      <if test="taskLevel != null" >
        TASK_LEVEL = #{taskLevel,jdbcType=INTEGER},
      </if>
      <if test="taskSeq != null" >
        TASK_SEQ = #{taskSeq,jdbcType=INTEGER},
      </if>
      <if test="taskIsCommit != null" >
        TASK_IS_COMMIT = #{taskIsCommit,jdbcType=CHAR},
      </if>
      <if test="taskUserNo != null" >
        TASK_USER_NO = #{taskUserNo,jdbcType=INTEGER},
      </if>
      <if test="taskRegtime != null" >
        TASK_REGTIME = #{taskRegtime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskStep != null" >
        TASK_STEP = #{taskStep,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chinasofti.cetp.practice.model.ProTask" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_pro_task
    set TASK_PRO_ID = #{taskProId,jdbcType=INTEGER},
      TASK_PARENT = #{taskParent,jdbcType=INTEGER},
      TASK_NAME = #{taskName,jdbcType=VARCHAR},
      TASK_TIME = #{taskTime,jdbcType=INTEGER},
      TASK_TIME_SUFFIX = #{taskTimeSuffix,jdbcType=CHAR},
      TASK_DIFFCULT = #{taskDiffcult,jdbcType=CHAR},
      TASK_SCORE = #{taskScore,jdbcType=INTEGER},
      TASK_IS_MILESTONE = #{taskIsMilestone,jdbcType=CHAR},
      TASK_PRE_ID = #{taskPreId,jdbcType=VARCHAR},
      TASK_PRIOR = #{taskPrior,jdbcType=CHAR},
      TASK_TARGET = #{taskTarget,jdbcType=VARCHAR},
      TASK_CONTENT = #{taskContent,jdbcType=VARCHAR},
      TASK_PONIT = #{taskPonit,jdbcType=VARCHAR},
      TASK_LEVEL = #{taskLevel,jdbcType=INTEGER},
      TASK_SEQ = #{taskSeq,jdbcType=INTEGER},
      TASK_IS_COMMIT = #{taskIsCommit,jdbcType=CHAR},
      TASK_USER_NO = #{taskUserNo,jdbcType=INTEGER},
      TASK_REGTIME = #{taskRegtime,jdbcType=TIMESTAMP},
      TASK_STEP = #{taskStep,jdbcType=LONGVARCHAR}
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinasofti.cetp.practice.model.ProTask" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_pro_task
    set TASK_PRO_ID = #{taskProId,jdbcType=INTEGER},
      TASK_PARENT = #{taskParent,jdbcType=INTEGER},
      TASK_NAME = #{taskName,jdbcType=VARCHAR},
      TASK_TIME = #{taskTime,jdbcType=INTEGER},
      TASK_TIME_SUFFIX = #{taskTimeSuffix,jdbcType=CHAR},
      TASK_DIFFCULT = #{taskDiffcult,jdbcType=CHAR},
      TASK_SCORE = #{taskScore,jdbcType=INTEGER},
      TASK_IS_MILESTONE = #{taskIsMilestone,jdbcType=CHAR},
      TASK_PRE_ID = #{taskPreId,jdbcType=VARCHAR},
      TASK_PRIOR = #{taskPrior,jdbcType=CHAR},
      TASK_TARGET = #{taskTarget,jdbcType=VARCHAR},
      TASK_CONTENT = #{taskContent,jdbcType=VARCHAR},
      TASK_PONIT = #{taskPonit,jdbcType=VARCHAR},
      TASK_LEVEL = #{taskLevel,jdbcType=INTEGER},
      TASK_SEQ = #{taskSeq,jdbcType=INTEGER},
      TASK_IS_COMMIT = #{taskIsCommit,jdbcType=CHAR},
      TASK_USER_NO = #{taskUserNo,jdbcType=INTEGER},
      TASK_REGTIME = #{taskRegtime,jdbcType=TIMESTAMP}
    where TASK_ID = #{taskId,jdbcType=INTEGER}
  </update>
  <!-- add by YF 2013-10-30 -->
  <select id="selectMoreTreePerson" resultMap="ResultMapForMoreTreePerson" parameterType="map" >
	SELECT <include refid="Base_Column_List" />,
	       PN_PLAN_ID,
	       PN_PLAN_TIME,
	       PN_PLAN_TIME_SUFFIX,
	       PN_STATUS,
	       PN_FINISH_PERCENT,
	       PN_TEACHER_SCORE,
	       PN_TEACHER_REASON,
	       Date_format(PN_PLAN_START_TIME, '%Y-%m-%d %H:%i') AS PN_PLAN_START_TIME,
	       Date_format(PN_PLAN_END_TIME, '%Y-%m-%d %H:%i')   AS PN_PLAN_END_TIME,
	       Date_format(PN_REAL_START_TIME, '%Y-%m-%d %H:%i') AS PN_REAL_START_TIME,
	       Date_format(PN_REAL_END_TIME, '%Y-%m-%d %H:%i')   AS PN_REAL_END_TIME
	FROM   tp_pro_task
	       LEFT JOIN tp_person_plan
	         ON ( TASK_ID = PN_TASK_ID
	              AND PN_STU_NO = #{stuNo,jdbcType=INTEGER} )
	WHERE  TASK_PRO_ID = #{proId,jdbcType=INTEGER}
	<if test="parentId != null" >
	       AND TASK_PARENT = #{parentId,jdbcType=INTEGER} 
    </if> 
	<if test="parentId == null" >
	       AND TASK_PARENT IS NULL
    </if>
    ORDER BY TASK_SEQ ASC 
  </select>
  <select id="selectMoreTreeTeam" resultMap="ResultMapForMoreTreeTeam" parameterType="map" >
	SELECT <include refid="Base_Column_List" />,
		PL_PLAN_ID,
		PL_PLAN_TIME,
		PL_PLAN_TIME_SUFFIX,
		GROUP_CONCAT(TPM_MEMBER_NO) AS PL_MEMBER_NO,
		GROUP_CONCAT(STU_NAME) AS STU_NAME,
		PL_STATUS,
		PL_FINISH_PERCENT,
		PL_LEADER_SCORE,
		PL_LEADER_REASON,
		PL_TEACHER_REASON,
		Date_format(
			PL_PLAN_START_TIME,
			'%Y-%m-%d %H:%i'
		) AS PL_PLAN_START_TIME,
		Date_format(
			PL_PLAN_END_TIME,
			'%Y-%m-%d %H:%i'
		) AS PL_PLAN_END_TIME,
		Date_format(
			PL_REAL_START_TIME,
			'%Y-%m-%d %H:%i'
		) AS PL_REAL_START_TIME,
		Date_format(
			PL_REAL_END_TIME,
			'%Y-%m-%d %H:%i'
		) AS PL_REAL_END_TIME
	FROM
		tp_pro_task
	LEFT JOIN tp_team_plan ON (
		TASK_ID = PL_TASK_ID
		AND PL_TEAM_ID = #{teamId,jdbcType=INTEGER}
	)
	LEFT JOIN tp_team_plan_member ON (PL_PLAN_ID = TPM_PLAN_ID)
	LEFT JOIN tp_student ON (TPM_MEMBER_NO = STU_NO)
	WHERE
		TASK_PRO_ID = #{proId,jdbcType=INTEGER}
	<if test="parentId != null" >
	       AND TASK_PARENT = #{parentId,jdbcType=INTEGER} 
    </if> 
	<if test="parentId == null" >
	       AND TASK_PARENT IS NULL
    </if>	
	GROUP BY
		TASK_ID
	ORDER BY TASK_SEQ ASC 
  </select>
  <resultMap id="ResultMapForMoreTreePerson" type="com.chinasofti.cetp.practice.model.MoreTreePersonProTask" extends="BaseResultMap" >
    <result column="PN_PLAN_ID" property="pnPlanId" jdbcType="INTEGER" />
    <result column="PN_PLAN_TIME" property="pnPlanTime" jdbcType="INTEGER" />
    <result column="PN_PLAN_TIME_SUFFIX" property="pnPlanTimeSuffix" jdbcType="CHAR" />
    <result column="PN_STATUS" property="pnStatus" jdbcType="VARCHAR" />
    <result column="PN_FINISH_PERCENT" property="pnFinishPercent" jdbcType="DOUBLE" />
    <result column="PN_PLAN_START_TIME" property="pnPlanStartTime" jdbcType="VARCHAR" />
    <result column="PN_PLAN_END_TIME" property="pnPlanEndTime" jdbcType="VARCHAR" />
    <result column="PN_REAL_START_TIME" property="pnRealStartTime" jdbcType="VARCHAR" />
    <result column="PN_REAL_END_TIME" property="pnRealEndTime" jdbcType="VARCHAR" />
    <result column="PN_TEACHER_SCORE" property="pnTeacherScore" jdbcType="INTEGER" />
    <result column="PN_TEACHER_REASON" property="pnTeacherReason" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapForMoreTreeTeam" type="com.chinasofti.cetp.practice.model.MoreTreeTeamProTask" extends="BaseResultMap" >
    <result column="PL_PLAN_ID" property="plPlanId" jdbcType="INTEGER" />
    <result column="PL_PLAN_TIME" property="plPlanTime" jdbcType="INTEGER" />
    <result column="PL_PLAN_TIME_SUFFIX" property="plPlanTimeSuffix" jdbcType="CHAR" />
    <result column="PL_MEMBER_NO" property="plMemberNo" jdbcType="VARCHAR" />
    <result column="STU_NAME" property="stuName" jdbcType="VARCHAR" />
    <result column="PL_STATUS" property="plStatus" jdbcType="VARCHAR" />
    <result column="PL_FINISH_PERCENT" property="plFinishPercent" jdbcType="DOUBLE" />
    <result column="PL_PLAN_START_TIME" property="plPlanStartTime" jdbcType="VARCHAR" />
    <result column="PL_PLAN_END_TIME" property="plPlanEndTime" jdbcType="VARCHAR" />
    <result column="PL_REAL_START_TIME" property="plRealStartTime" jdbcType="VARCHAR" />
    <result column="PL_REAL_END_TIME" property="plRealEndTime" jdbcType="VARCHAR" />
    <result column="PL_LEADER_SCORE" property="plLeaderScore" jdbcType="INTEGER" />
    <result column="PL_LEADER_REASON" property="plLeaderReason" jdbcType="VARCHAR" />
    <result column="PL_TEACHER_REASON" property="plTeacherReason" jdbcType="VARCHAR" />
  </resultMap>
</mapper>