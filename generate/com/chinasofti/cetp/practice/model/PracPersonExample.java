package com.chinasofti.cetp.practice.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PracPersonExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public PracPersonExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPpPracIdIsNull() {
            addCriterion("PP_PRAC_ID is null");
            return (Criteria) this;
        }

        public Criteria andPpPracIdIsNotNull() {
            addCriterion("PP_PRAC_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPpPracIdEqualTo(Integer value) {
            addCriterion("PP_PRAC_ID =", value, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpPracIdNotEqualTo(Integer value) {
            addCriterion("PP_PRAC_ID <>", value, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpPracIdGreaterThan(Integer value) {
            addCriterion("PP_PRAC_ID >", value, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpPracIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PP_PRAC_ID >=", value, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpPracIdLessThan(Integer value) {
            addCriterion("PP_PRAC_ID <", value, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpPracIdLessThanOrEqualTo(Integer value) {
            addCriterion("PP_PRAC_ID <=", value, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpPracIdIn(List<Integer> values) {
            addCriterion("PP_PRAC_ID in", values, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpPracIdNotIn(List<Integer> values) {
            addCriterion("PP_PRAC_ID not in", values, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpPracIdBetween(Integer value1, Integer value2) {
            addCriterion("PP_PRAC_ID between", value1, value2, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpPracIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PP_PRAC_ID not between", value1, value2, "ppPracId");
            return (Criteria) this;
        }

        public Criteria andPpProIdIsNull() {
            addCriterion("PP_PRO_ID is null");
            return (Criteria) this;
        }

        public Criteria andPpProIdIsNotNull() {
            addCriterion("PP_PRO_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPpProIdEqualTo(Integer value) {
            addCriterion("PP_PRO_ID =", value, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpProIdNotEqualTo(Integer value) {
            addCriterion("PP_PRO_ID <>", value, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpProIdGreaterThan(Integer value) {
            addCriterion("PP_PRO_ID >", value, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpProIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PP_PRO_ID >=", value, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpProIdLessThan(Integer value) {
            addCriterion("PP_PRO_ID <", value, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpProIdLessThanOrEqualTo(Integer value) {
            addCriterion("PP_PRO_ID <=", value, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpProIdIn(List<Integer> values) {
            addCriterion("PP_PRO_ID in", values, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpProIdNotIn(List<Integer> values) {
            addCriterion("PP_PRO_ID not in", values, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpProIdBetween(Integer value1, Integer value2) {
            addCriterion("PP_PRO_ID between", value1, value2, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpProIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PP_PRO_ID not between", value1, value2, "ppProId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdIsNull() {
            addCriterion("PP_STU_ID is null");
            return (Criteria) this;
        }

        public Criteria andPpStuIdIsNotNull() {
            addCriterion("PP_STU_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPpStuIdEqualTo(Integer value) {
            addCriterion("PP_STU_ID =", value, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdNotEqualTo(Integer value) {
            addCriterion("PP_STU_ID <>", value, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdGreaterThan(Integer value) {
            addCriterion("PP_STU_ID >", value, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PP_STU_ID >=", value, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdLessThan(Integer value) {
            addCriterion("PP_STU_ID <", value, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdLessThanOrEqualTo(Integer value) {
            addCriterion("PP_STU_ID <=", value, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdIn(List<Integer> values) {
            addCriterion("PP_STU_ID in", values, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdNotIn(List<Integer> values) {
            addCriterion("PP_STU_ID not in", values, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdBetween(Integer value1, Integer value2) {
            addCriterion("PP_STU_ID between", value1, value2, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpStuIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PP_STU_ID not between", value1, value2, "ppStuId");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreIsNull() {
            addCriterion("PP_HARD_SCORE is null");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreIsNotNull() {
            addCriterion("PP_HARD_SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreEqualTo(Integer value) {
            addCriterion("PP_HARD_SCORE =", value, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreNotEqualTo(Integer value) {
            addCriterion("PP_HARD_SCORE <>", value, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreGreaterThan(Integer value) {
            addCriterion("PP_HARD_SCORE >", value, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("PP_HARD_SCORE >=", value, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreLessThan(Integer value) {
            addCriterion("PP_HARD_SCORE <", value, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreLessThanOrEqualTo(Integer value) {
            addCriterion("PP_HARD_SCORE <=", value, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreIn(List<Integer> values) {
            addCriterion("PP_HARD_SCORE in", values, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreNotIn(List<Integer> values) {
            addCriterion("PP_HARD_SCORE not in", values, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreBetween(Integer value1, Integer value2) {
            addCriterion("PP_HARD_SCORE between", value1, value2, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpHardScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("PP_HARD_SCORE not between", value1, value2, "ppHardScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreIsNull() {
            addCriterion("PP_SOFT_SCORE is null");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreIsNotNull() {
            addCriterion("PP_SOFT_SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreEqualTo(Integer value) {
            addCriterion("PP_SOFT_SCORE =", value, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreNotEqualTo(Integer value) {
            addCriterion("PP_SOFT_SCORE <>", value, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreGreaterThan(Integer value) {
            addCriterion("PP_SOFT_SCORE >", value, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("PP_SOFT_SCORE >=", value, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreLessThan(Integer value) {
            addCriterion("PP_SOFT_SCORE <", value, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreLessThanOrEqualTo(Integer value) {
            addCriterion("PP_SOFT_SCORE <=", value, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreIn(List<Integer> values) {
            addCriterion("PP_SOFT_SCORE in", values, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreNotIn(List<Integer> values) {
            addCriterion("PP_SOFT_SCORE not in", values, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreBetween(Integer value1, Integer value2) {
            addCriterion("PP_SOFT_SCORE between", value1, value2, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpSoftScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("PP_SOFT_SCORE not between", value1, value2, "ppSoftScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreIsNull() {
            addCriterion("PP_REAL_SCORE is null");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreIsNotNull() {
            addCriterion("PP_REAL_SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreEqualTo(Integer value) {
            addCriterion("PP_REAL_SCORE =", value, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreNotEqualTo(Integer value) {
            addCriterion("PP_REAL_SCORE <>", value, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreGreaterThan(Integer value) {
            addCriterion("PP_REAL_SCORE >", value, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("PP_REAL_SCORE >=", value, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreLessThan(Integer value) {
            addCriterion("PP_REAL_SCORE <", value, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreLessThanOrEqualTo(Integer value) {
            addCriterion("PP_REAL_SCORE <=", value, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreIn(List<Integer> values) {
            addCriterion("PP_REAL_SCORE in", values, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreNotIn(List<Integer> values) {
            addCriterion("PP_REAL_SCORE not in", values, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreBetween(Integer value1, Integer value2) {
            addCriterion("PP_REAL_SCORE between", value1, value2, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRealScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("PP_REAL_SCORE not between", value1, value2, "ppRealScore");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeIsNull() {
            addCriterion("PP_REGTIME is null");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeIsNotNull() {
            addCriterion("PP_REGTIME is not null");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeEqualTo(Date value) {
            addCriterion("PP_REGTIME =", value, "ppRegtime");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeNotEqualTo(Date value) {
            addCriterion("PP_REGTIME <>", value, "ppRegtime");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeGreaterThan(Date value) {
            addCriterion("PP_REGTIME >", value, "ppRegtime");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("PP_REGTIME >=", value, "ppRegtime");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeLessThan(Date value) {
            addCriterion("PP_REGTIME <", value, "ppRegtime");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeLessThanOrEqualTo(Date value) {
            addCriterion("PP_REGTIME <=", value, "ppRegtime");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeIn(List<Date> values) {
            addCriterion("PP_REGTIME in", values, "ppRegtime");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeNotIn(List<Date> values) {
            addCriterion("PP_REGTIME not in", values, "ppRegtime");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeBetween(Date value1, Date value2) {
            addCriterion("PP_REGTIME between", value1, value2, "ppRegtime");
            return (Criteria) this;
        }

        public Criteria andPpRegtimeNotBetween(Date value1, Date value2) {
            addCriterion("PP_REGTIME not between", value1, value2, "ppRegtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_prac_person
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 25 19:47:24 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_prac_person
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}