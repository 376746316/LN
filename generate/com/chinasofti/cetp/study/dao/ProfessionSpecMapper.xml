<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.cetp.study.dao.ProfessionSpecMapper">
	<resultMap id="BaseResultMap" type="com.chinasofti.cetp.study.model.ProfessionSpec">
		<id column="PS_PROF_ID" property="psProfId" jdbcType="INTEGER" />
		<id column="PS_SPEC_ID" property="psSpecId" jdbcType="INTEGER" />
		<result column="PS_SEQ" property="psSeq" jdbcType="INTEGER" />
		<result column="PS_POINT_X" property="psPointX" jdbcType="INTEGER" />
		<result column="PS_POINT_Y" property="psPointY" jdbcType="INTEGER" />
	</resultMap>
	<resultMap type="com.chinasofti.cetp.study.model.MoreProfessionSpec" id="MoreResultMap" extends="BaseResultMap">
		<result column="SPEC_NAME" property="specName" jdbcType="VARCHAR" />
		<result column="PROGRESS" property="progress" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		PS_PROF_ID, PS_SPEC_ID, PS_SEQ, PS_POINT_X, PS_POINT_Y
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chinasofti.cetp.study.model.ProfessionSpecExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tp_profession_spec
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.chinasofti.cetp.study.model.ProfessionSpecKey">
		select
		<include refid="Base_Column_List" />
		from tp_profession_spec
		where PS_PROF_ID = #{psProfId,jdbcType=INTEGER}
		and PS_SPEC_ID = #{psSpecId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="com.chinasofti.cetp.study.model.ProfessionSpecKey">
		delete from tp_profession_spec
		where PS_PROF_ID = #{psProfId,jdbcType=INTEGER}
		and PS_SPEC_ID = #{psSpecId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.chinasofti.cetp.study.model.ProfessionSpecExample">
		delete from tp_profession_spec
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.chinasofti.cetp.study.model.ProfessionSpec">
		insert into tp_profession_spec (PS_PROF_ID, PS_SPEC_ID, PS_SEQ,
		PS_POINT_X, PS_POINT_Y)
		values (#{psProfId,jdbcType=INTEGER}, #{psSpecId,jdbcType=INTEGER}, #{psSeq,jdbcType=INTEGER},
		#{psPointX,jdbcType=INTEGER}, #{psPointY,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.chinasofti.cetp.study.model.ProfessionSpec">
		insert into tp_profession_spec
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="psProfId != null">
				PS_PROF_ID,
			</if>
			<if test="psSpecId != null">
				PS_SPEC_ID,
			</if>
			<if test="psSeq != null">
				PS_SEQ,
			</if>
			<if test="psPointX != null">
				PS_POINT_X,
			</if>
			<if test="psPointY != null">
				PS_POINT_Y,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="psProfId != null">
				#{psProfId,jdbcType=INTEGER},
			</if>
			<if test="psSpecId != null">
				#{psSpecId,jdbcType=INTEGER},
			</if>
			<if test="psSeq != null">
				#{psSeq,jdbcType=INTEGER},
			</if>
			<if test="psPointX != null">
				#{psPointX,jdbcType=INTEGER},
			</if>
			<if test="psPointY != null">
				#{psPointY,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.chinasofti.cetp.study.model.ProfessionSpecExample" resultType="java.lang.Integer">
		select count(*) from tp_profession_spec
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tp_profession_spec
		<set>
			<if test="record.psProfId != null">
				PS_PROF_ID = #{record.psProfId,jdbcType=INTEGER},
			</if>
			<if test="record.psSpecId != null">
				PS_SPEC_ID = #{record.psSpecId,jdbcType=INTEGER},
			</if>
			<if test="record.psSeq != null">
				PS_SEQ = #{record.psSeq,jdbcType=INTEGER},
			</if>
			<if test="record.psPointX != null">
				PS_POINT_X = #{record.psPointX,jdbcType=INTEGER},
			</if>
			<if test="record.psPointY != null">
				PS_POINT_Y = #{record.psPointY,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tp_profession_spec
		set PS_PROF_ID = #{record.psProfId,jdbcType=INTEGER},
		PS_SPEC_ID = #{record.psSpecId,jdbcType=INTEGER},
		PS_SEQ = #{record.psSeq,jdbcType=INTEGER},
		PS_POINT_X = #{record.psPointX,jdbcType=INTEGER},
		PS_POINT_Y = #{record.psPointY,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.chinasofti.cetp.study.model.ProfessionSpec">
		update tp_profession_spec
		<set>
			<if test="psSeq != null">
				PS_SEQ = #{psSeq,jdbcType=INTEGER},
			</if>
			<if test="psPointX != null">
				PS_POINT_X = #{psPointX,jdbcType=INTEGER},
			</if>
			<if test="psPointY != null">
				PS_POINT_Y = #{psPointY,jdbcType=INTEGER},
			</if>
		</set>
		where PS_PROF_ID = #{psProfId,jdbcType=INTEGER}
		and PS_SPEC_ID = #{psSpecId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.chinasofti.cetp.study.model.ProfessionSpec">
		update tp_profession_spec
		set PS_SEQ = #{psSeq,jdbcType=INTEGER},
		PS_POINT_X = #{psPointX,jdbcType=INTEGER},
		PS_POINT_Y = #{psPointY,jdbcType=INTEGER}
		where PS_PROF_ID = #{psProfId,jdbcType=INTEGER}
		and PS_SPEC_ID = #{psSpecId,jdbcType=INTEGER}
	</update>
	<select id="getProfSpec" resultMap="MoreResultMap" parameterType="map">
		SELECT
		PS_SPEC_ID,
		SPEC_NAME,
		PS_POINT_X,
		PS_POINT_Y,
		PS_SEQ,
		<choose>
			<when test="stuNo != null">
				(
				SELECT
				ROUND(
				IFNULL(
				(
				SELECT
				count(0)
				FROM
				tp_subware_stu
				INNER JOIN tp_sub_courseware ON WT_SUBWARE_ID = SC_ID
				INNER JOIN tp_chapter ON SC_CHAPTER_ID = CHAP_ID
				WHERE
				CHAP_SPEC_ID = SPEC_ID
				AND WT_STATUS = '3'
				AND WT_STU_ID = #{stuNo}
				) / (
				SELECT
				count(0)
				FROM
				tp_chapter
				INNER JOIN tp_sub_courseware ON SC_CHAPTER_ID = CHAP_ID
				WHERE
				CHAP_SPEC_ID = SPEC_ID
				),
				0
				) * 100
				)
				)
			</when>
			<otherwise>
				0
			</otherwise>
		</choose>
		AS PROGRESS
		FROM
		tp_profession_spec
		INNER JOIN tp_spec_course ON PS_SPEC_ID = SPEC_ID
		WHERE
		PS_PROF_ID = #{profId}
		AND SPEC_STATUS = "3"
		AND PS_POINT_X > 0
		AND PS_POINT_Y > 0
	</select>
	<insert id="insertList" parameterType="java.util.List">
		insert into tp_profession_spec (PS_PROF_ID, PS_SPEC_ID, PS_SEQ,
		PS_POINT_X, PS_POINT_Y)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.psProfId,jdbcType=INTEGER}, #{item.psSpecId,jdbcType=INTEGER}, #{item.psSeq,jdbcType=INTEGER},
			#{item.psPointX,jdbcType=INTEGER}, #{item.psPointY,jdbcType=INTEGER})
		</foreach>
	</insert>

	<select id="getProfSpecById" resultMap="MoreResultMap" parameterType="map">
		SELECT
		PS_SPEC_ID,
		SPEC_NAME,
		PS_POINT_X,
		PS_POINT_Y,
		PS_SEQ
		FROM
		tp_profession_spec
		INNER JOIN tp_spec_course ON PS_SPEC_ID = SPEC_ID
		WHERE
		PS_PROF_ID = #{profId}
		ORDER BY PS_SEQ ASC 
	</select>
</mapper>