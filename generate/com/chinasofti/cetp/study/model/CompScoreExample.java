package com.chinasofti.cetp.study.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CompScoreExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public CompScoreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCompSpecIdIsNull() {
            addCriterion("COMP_SPEC_ID is null");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdIsNotNull() {
            addCriterion("COMP_SPEC_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdEqualTo(Integer value) {
            addCriterion("COMP_SPEC_ID =", value, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdNotEqualTo(Integer value) {
            addCriterion("COMP_SPEC_ID <>", value, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdGreaterThan(Integer value) {
            addCriterion("COMP_SPEC_ID >", value, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMP_SPEC_ID >=", value, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdLessThan(Integer value) {
            addCriterion("COMP_SPEC_ID <", value, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMP_SPEC_ID <=", value, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdIn(List<Integer> values) {
            addCriterion("COMP_SPEC_ID in", values, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdNotIn(List<Integer> values) {
            addCriterion("COMP_SPEC_ID not in", values, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdBetween(Integer value1, Integer value2) {
            addCriterion("COMP_SPEC_ID between", value1, value2, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompSpecIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMP_SPEC_ID not between", value1, value2, "compSpecId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdIsNull() {
            addCriterion("COMP_STU_ID is null");
            return (Criteria) this;
        }

        public Criteria andCompStuIdIsNotNull() {
            addCriterion("COMP_STU_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCompStuIdEqualTo(Integer value) {
            addCriterion("COMP_STU_ID =", value, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdNotEqualTo(Integer value) {
            addCriterion("COMP_STU_ID <>", value, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdGreaterThan(Integer value) {
            addCriterion("COMP_STU_ID >", value, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMP_STU_ID >=", value, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdLessThan(Integer value) {
            addCriterion("COMP_STU_ID <", value, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdLessThanOrEqualTo(Integer value) {
            addCriterion("COMP_STU_ID <=", value, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdIn(List<Integer> values) {
            addCriterion("COMP_STU_ID in", values, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdNotIn(List<Integer> values) {
            addCriterion("COMP_STU_ID not in", values, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdBetween(Integer value1, Integer value2) {
            addCriterion("COMP_STU_ID between", value1, value2, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompStuIdNotBetween(Integer value1, Integer value2) {
            addCriterion("COMP_STU_ID not between", value1, value2, "compStuId");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreIsNull() {
            addCriterion("COMP_THEORY_SCORE is null");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreIsNotNull() {
            addCriterion("COMP_THEORY_SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreEqualTo(Integer value) {
            addCriterion("COMP_THEORY_SCORE =", value, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreNotEqualTo(Integer value) {
            addCriterion("COMP_THEORY_SCORE <>", value, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreGreaterThan(Integer value) {
            addCriterion("COMP_THEORY_SCORE >", value, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMP_THEORY_SCORE >=", value, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreLessThan(Integer value) {
            addCriterion("COMP_THEORY_SCORE <", value, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreLessThanOrEqualTo(Integer value) {
            addCriterion("COMP_THEORY_SCORE <=", value, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreIn(List<Integer> values) {
            addCriterion("COMP_THEORY_SCORE in", values, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreNotIn(List<Integer> values) {
            addCriterion("COMP_THEORY_SCORE not in", values, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreBetween(Integer value1, Integer value2) {
            addCriterion("COMP_THEORY_SCORE between", value1, value2, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompTheoryScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("COMP_THEORY_SCORE not between", value1, value2, "compTheoryScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreIsNull() {
            addCriterion("COMP_PRAC_SCORE is null");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreIsNotNull() {
            addCriterion("COMP_PRAC_SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreEqualTo(Integer value) {
            addCriterion("COMP_PRAC_SCORE =", value, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreNotEqualTo(Integer value) {
            addCriterion("COMP_PRAC_SCORE <>", value, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreGreaterThan(Integer value) {
            addCriterion("COMP_PRAC_SCORE >", value, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMP_PRAC_SCORE >=", value, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreLessThan(Integer value) {
            addCriterion("COMP_PRAC_SCORE <", value, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreLessThanOrEqualTo(Integer value) {
            addCriterion("COMP_PRAC_SCORE <=", value, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreIn(List<Integer> values) {
            addCriterion("COMP_PRAC_SCORE in", values, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreNotIn(List<Integer> values) {
            addCriterion("COMP_PRAC_SCORE not in", values, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreBetween(Integer value1, Integer value2) {
            addCriterion("COMP_PRAC_SCORE between", value1, value2, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompPracScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("COMP_PRAC_SCORE not between", value1, value2, "compPracScore");
            return (Criteria) this;
        }

        public Criteria andCompUserNoIsNull() {
            addCriterion("COMP_USER_NO is null");
            return (Criteria) this;
        }

        public Criteria andCompUserNoIsNotNull() {
            addCriterion("COMP_USER_NO is not null");
            return (Criteria) this;
        }

        public Criteria andCompUserNoEqualTo(Integer value) {
            addCriterion("COMP_USER_NO =", value, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompUserNoNotEqualTo(Integer value) {
            addCriterion("COMP_USER_NO <>", value, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompUserNoGreaterThan(Integer value) {
            addCriterion("COMP_USER_NO >", value, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompUserNoGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMP_USER_NO >=", value, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompUserNoLessThan(Integer value) {
            addCriterion("COMP_USER_NO <", value, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompUserNoLessThanOrEqualTo(Integer value) {
            addCriterion("COMP_USER_NO <=", value, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompUserNoIn(List<Integer> values) {
            addCriterion("COMP_USER_NO in", values, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompUserNoNotIn(List<Integer> values) {
            addCriterion("COMP_USER_NO not in", values, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompUserNoBetween(Integer value1, Integer value2) {
            addCriterion("COMP_USER_NO between", value1, value2, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompUserNoNotBetween(Integer value1, Integer value2) {
            addCriterion("COMP_USER_NO not between", value1, value2, "compUserNo");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeIsNull() {
            addCriterion("COMP_REGTIME is null");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeIsNotNull() {
            addCriterion("COMP_REGTIME is not null");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeEqualTo(Date value) {
            addCriterion("COMP_REGTIME =", value, "compRegtime");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeNotEqualTo(Date value) {
            addCriterion("COMP_REGTIME <>", value, "compRegtime");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeGreaterThan(Date value) {
            addCriterion("COMP_REGTIME >", value, "compRegtime");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("COMP_REGTIME >=", value, "compRegtime");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeLessThan(Date value) {
            addCriterion("COMP_REGTIME <", value, "compRegtime");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeLessThanOrEqualTo(Date value) {
            addCriterion("COMP_REGTIME <=", value, "compRegtime");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeIn(List<Date> values) {
            addCriterion("COMP_REGTIME in", values, "compRegtime");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeNotIn(List<Date> values) {
            addCriterion("COMP_REGTIME not in", values, "compRegtime");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeBetween(Date value1, Date value2) {
            addCriterion("COMP_REGTIME between", value1, value2, "compRegtime");
            return (Criteria) this;
        }

        public Criteria andCompRegtimeNotBetween(Date value1, Date value2) {
            addCriterion("COMP_REGTIME not between", value1, value2, "compRegtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_comp_score
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 25 19:26:27 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_comp_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}