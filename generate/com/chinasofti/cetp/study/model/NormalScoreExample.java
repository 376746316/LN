package com.chinasofti.cetp.study.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class NormalScoreExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public NormalScoreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNsStuIdIsNull() {
            addCriterion("NS_STU_ID is null");
            return (Criteria) this;
        }

        public Criteria andNsStuIdIsNotNull() {
            addCriterion("NS_STU_ID is not null");
            return (Criteria) this;
        }

        public Criteria andNsStuIdEqualTo(Integer value) {
            addCriterion("NS_STU_ID =", value, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsStuIdNotEqualTo(Integer value) {
            addCriterion("NS_STU_ID <>", value, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsStuIdGreaterThan(Integer value) {
            addCriterion("NS_STU_ID >", value, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsStuIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("NS_STU_ID >=", value, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsStuIdLessThan(Integer value) {
            addCriterion("NS_STU_ID <", value, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsStuIdLessThanOrEqualTo(Integer value) {
            addCriterion("NS_STU_ID <=", value, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsStuIdIn(List<Integer> values) {
            addCriterion("NS_STU_ID in", values, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsStuIdNotIn(List<Integer> values) {
            addCriterion("NS_STU_ID not in", values, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsStuIdBetween(Integer value1, Integer value2) {
            addCriterion("NS_STU_ID between", value1, value2, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsStuIdNotBetween(Integer value1, Integer value2) {
            addCriterion("NS_STU_ID not between", value1, value2, "nsStuId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdIsNull() {
            addCriterion("NS_CHAP_ID is null");
            return (Criteria) this;
        }

        public Criteria andNsChapIdIsNotNull() {
            addCriterion("NS_CHAP_ID is not null");
            return (Criteria) this;
        }

        public Criteria andNsChapIdEqualTo(Integer value) {
            addCriterion("NS_CHAP_ID =", value, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdNotEqualTo(Integer value) {
            addCriterion("NS_CHAP_ID <>", value, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdGreaterThan(Integer value) {
            addCriterion("NS_CHAP_ID >", value, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("NS_CHAP_ID >=", value, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdLessThan(Integer value) {
            addCriterion("NS_CHAP_ID <", value, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdLessThanOrEqualTo(Integer value) {
            addCriterion("NS_CHAP_ID <=", value, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdIn(List<Integer> values) {
            addCriterion("NS_CHAP_ID in", values, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdNotIn(List<Integer> values) {
            addCriterion("NS_CHAP_ID not in", values, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdBetween(Integer value1, Integer value2) {
            addCriterion("NS_CHAP_ID between", value1, value2, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsChapIdNotBetween(Integer value1, Integer value2) {
            addCriterion("NS_CHAP_ID not between", value1, value2, "nsChapId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdIsNull() {
            addCriterion("NS_TEACHER_ID is null");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdIsNotNull() {
            addCriterion("NS_TEACHER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdEqualTo(Integer value) {
            addCriterion("NS_TEACHER_ID =", value, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdNotEqualTo(Integer value) {
            addCriterion("NS_TEACHER_ID <>", value, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdGreaterThan(Integer value) {
            addCriterion("NS_TEACHER_ID >", value, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("NS_TEACHER_ID >=", value, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdLessThan(Integer value) {
            addCriterion("NS_TEACHER_ID <", value, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdLessThanOrEqualTo(Integer value) {
            addCriterion("NS_TEACHER_ID <=", value, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdIn(List<Integer> values) {
            addCriterion("NS_TEACHER_ID in", values, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdNotIn(List<Integer> values) {
            addCriterion("NS_TEACHER_ID not in", values, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdBetween(Integer value1, Integer value2) {
            addCriterion("NS_TEACHER_ID between", value1, value2, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsTeacherIdNotBetween(Integer value1, Integer value2) {
            addCriterion("NS_TEACHER_ID not between", value1, value2, "nsTeacherId");
            return (Criteria) this;
        }

        public Criteria andNsScoreIsNull() {
            addCriterion("NS_SCORE is null");
            return (Criteria) this;
        }

        public Criteria andNsScoreIsNotNull() {
            addCriterion("NS_SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andNsScoreEqualTo(Integer value) {
            addCriterion("NS_SCORE =", value, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsScoreNotEqualTo(Integer value) {
            addCriterion("NS_SCORE <>", value, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsScoreGreaterThan(Integer value) {
            addCriterion("NS_SCORE >", value, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("NS_SCORE >=", value, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsScoreLessThan(Integer value) {
            addCriterion("NS_SCORE <", value, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsScoreLessThanOrEqualTo(Integer value) {
            addCriterion("NS_SCORE <=", value, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsScoreIn(List<Integer> values) {
            addCriterion("NS_SCORE in", values, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsScoreNotIn(List<Integer> values) {
            addCriterion("NS_SCORE not in", values, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsScoreBetween(Integer value1, Integer value2) {
            addCriterion("NS_SCORE between", value1, value2, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("NS_SCORE not between", value1, value2, "nsScore");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeIsNull() {
            addCriterion("NS_REGTIME is null");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeIsNotNull() {
            addCriterion("NS_REGTIME is not null");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeEqualTo(Date value) {
            addCriterion("NS_REGTIME =", value, "nsRegtime");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeNotEqualTo(Date value) {
            addCriterion("NS_REGTIME <>", value, "nsRegtime");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeGreaterThan(Date value) {
            addCriterion("NS_REGTIME >", value, "nsRegtime");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("NS_REGTIME >=", value, "nsRegtime");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeLessThan(Date value) {
            addCriterion("NS_REGTIME <", value, "nsRegtime");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeLessThanOrEqualTo(Date value) {
            addCriterion("NS_REGTIME <=", value, "nsRegtime");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeIn(List<Date> values) {
            addCriterion("NS_REGTIME in", values, "nsRegtime");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeNotIn(List<Date> values) {
            addCriterion("NS_REGTIME not in", values, "nsRegtime");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeBetween(Date value1, Date value2) {
            addCriterion("NS_REGTIME between", value1, value2, "nsRegtime");
            return (Criteria) this;
        }

        public Criteria andNsRegtimeNotBetween(Date value1, Date value2) {
            addCriterion("NS_REGTIME not between", value1, value2, "nsRegtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_normal_score
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 25 19:26:27 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_normal_score
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}