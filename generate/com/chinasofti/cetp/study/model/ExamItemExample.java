package com.chinasofti.cetp.study.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ExamItemExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public ExamItemExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andItemIdIsNull() {
            addCriterion("ITEM_ID is null");
            return (Criteria) this;
        }

        public Criteria andItemIdIsNotNull() {
            addCriterion("ITEM_ID is not null");
            return (Criteria) this;
        }

        public Criteria andItemIdEqualTo(Integer value) {
            addCriterion("ITEM_ID =", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotEqualTo(Integer value) {
            addCriterion("ITEM_ID <>", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdGreaterThan(Integer value) {
            addCriterion("ITEM_ID >", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ITEM_ID >=", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdLessThan(Integer value) {
            addCriterion("ITEM_ID <", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdLessThanOrEqualTo(Integer value) {
            addCriterion("ITEM_ID <=", value, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdIn(List<Integer> values) {
            addCriterion("ITEM_ID in", values, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotIn(List<Integer> values) {
            addCriterion("ITEM_ID not in", values, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdBetween(Integer value1, Integer value2) {
            addCriterion("ITEM_ID between", value1, value2, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ITEM_ID not between", value1, value2, "itemId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdIsNull() {
            addCriterion("ITEM_EXAM_ID is null");
            return (Criteria) this;
        }

        public Criteria andItemExamIdIsNotNull() {
            addCriterion("ITEM_EXAM_ID is not null");
            return (Criteria) this;
        }

        public Criteria andItemExamIdEqualTo(Integer value) {
            addCriterion("ITEM_EXAM_ID =", value, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdNotEqualTo(Integer value) {
            addCriterion("ITEM_EXAM_ID <>", value, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdGreaterThan(Integer value) {
            addCriterion("ITEM_EXAM_ID >", value, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ITEM_EXAM_ID >=", value, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdLessThan(Integer value) {
            addCriterion("ITEM_EXAM_ID <", value, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdLessThanOrEqualTo(Integer value) {
            addCriterion("ITEM_EXAM_ID <=", value, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdIn(List<Integer> values) {
            addCriterion("ITEM_EXAM_ID in", values, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdNotIn(List<Integer> values) {
            addCriterion("ITEM_EXAM_ID not in", values, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdBetween(Integer value1, Integer value2) {
            addCriterion("ITEM_EXAM_ID between", value1, value2, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemExamIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ITEM_EXAM_ID not between", value1, value2, "itemExamId");
            return (Criteria) this;
        }

        public Criteria andItemSeqIsNull() {
            addCriterion("ITEM_SEQ is null");
            return (Criteria) this;
        }

        public Criteria andItemSeqIsNotNull() {
            addCriterion("ITEM_SEQ is not null");
            return (Criteria) this;
        }

        public Criteria andItemSeqEqualTo(Integer value) {
            addCriterion("ITEM_SEQ =", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqNotEqualTo(Integer value) {
            addCriterion("ITEM_SEQ <>", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqGreaterThan(Integer value) {
            addCriterion("ITEM_SEQ >", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqGreaterThanOrEqualTo(Integer value) {
            addCriterion("ITEM_SEQ >=", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqLessThan(Integer value) {
            addCriterion("ITEM_SEQ <", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqLessThanOrEqualTo(Integer value) {
            addCriterion("ITEM_SEQ <=", value, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqIn(List<Integer> values) {
            addCriterion("ITEM_SEQ in", values, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqNotIn(List<Integer> values) {
            addCriterion("ITEM_SEQ not in", values, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqBetween(Integer value1, Integer value2) {
            addCriterion("ITEM_SEQ between", value1, value2, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemSeqNotBetween(Integer value1, Integer value2) {
            addCriterion("ITEM_SEQ not between", value1, value2, "itemSeq");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeIsNull() {
            addCriterion("ITEM_REGTIME is null");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeIsNotNull() {
            addCriterion("ITEM_REGTIME is not null");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeEqualTo(Date value) {
            addCriterion("ITEM_REGTIME =", value, "itemRegtime");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeNotEqualTo(Date value) {
            addCriterion("ITEM_REGTIME <>", value, "itemRegtime");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeGreaterThan(Date value) {
            addCriterion("ITEM_REGTIME >", value, "itemRegtime");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("ITEM_REGTIME >=", value, "itemRegtime");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeLessThan(Date value) {
            addCriterion("ITEM_REGTIME <", value, "itemRegtime");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeLessThanOrEqualTo(Date value) {
            addCriterion("ITEM_REGTIME <=", value, "itemRegtime");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeIn(List<Date> values) {
            addCriterion("ITEM_REGTIME in", values, "itemRegtime");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeNotIn(List<Date> values) {
            addCriterion("ITEM_REGTIME not in", values, "itemRegtime");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeBetween(Date value1, Date value2) {
            addCriterion("ITEM_REGTIME between", value1, value2, "itemRegtime");
            return (Criteria) this;
        }

        public Criteria andItemRegtimeNotBetween(Date value1, Date value2) {
            addCriterion("ITEM_REGTIME not between", value1, value2, "itemRegtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_exam_item
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 25 19:26:27 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_exam_item
     *
     * @mbggenerated Thu Jul 25 19:26:27 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}