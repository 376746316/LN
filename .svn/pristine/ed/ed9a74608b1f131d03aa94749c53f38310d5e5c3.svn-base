package com.chinasofti.cetp.practice.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PracticeTeamExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public PracticeTeamExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTeamIdIsNull() {
            addCriterion("TEAM_ID is null");
            return (Criteria) this;
        }

        public Criteria andTeamIdIsNotNull() {
            addCriterion("TEAM_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTeamIdEqualTo(Integer value) {
            addCriterion("TEAM_ID =", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotEqualTo(Integer value) {
            addCriterion("TEAM_ID <>", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdGreaterThan(Integer value) {
            addCriterion("TEAM_ID >", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TEAM_ID >=", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdLessThan(Integer value) {
            addCriterion("TEAM_ID <", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdLessThanOrEqualTo(Integer value) {
            addCriterion("TEAM_ID <=", value, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdIn(List<Integer> values) {
            addCriterion("TEAM_ID in", values, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotIn(List<Integer> values) {
            addCriterion("TEAM_ID not in", values, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_ID between", value1, value2, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_ID not between", value1, value2, "teamId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdIsNull() {
            addCriterion("TEAM_PRAC_ID is null");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdIsNotNull() {
            addCriterion("TEAM_PRAC_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdEqualTo(Integer value) {
            addCriterion("TEAM_PRAC_ID =", value, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdNotEqualTo(Integer value) {
            addCriterion("TEAM_PRAC_ID <>", value, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdGreaterThan(Integer value) {
            addCriterion("TEAM_PRAC_ID >", value, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TEAM_PRAC_ID >=", value, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdLessThan(Integer value) {
            addCriterion("TEAM_PRAC_ID <", value, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdLessThanOrEqualTo(Integer value) {
            addCriterion("TEAM_PRAC_ID <=", value, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdIn(List<Integer> values) {
            addCriterion("TEAM_PRAC_ID in", values, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdNotIn(List<Integer> values) {
            addCriterion("TEAM_PRAC_ID not in", values, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_PRAC_ID between", value1, value2, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamPracIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_PRAC_ID not between", value1, value2, "teamPracId");
            return (Criteria) this;
        }

        public Criteria andTeamNameIsNull() {
            addCriterion("TEAM_NAME is null");
            return (Criteria) this;
        }

        public Criteria andTeamNameIsNotNull() {
            addCriterion("TEAM_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andTeamNameEqualTo(String value) {
            addCriterion("TEAM_NAME =", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotEqualTo(String value) {
            addCriterion("TEAM_NAME <>", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameGreaterThan(String value) {
            addCriterion("TEAM_NAME >", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameGreaterThanOrEqualTo(String value) {
            addCriterion("TEAM_NAME >=", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameLessThan(String value) {
            addCriterion("TEAM_NAME <", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameLessThanOrEqualTo(String value) {
            addCriterion("TEAM_NAME <=", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameLike(String value) {
            addCriterion("TEAM_NAME like", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotLike(String value) {
            addCriterion("TEAM_NAME not like", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameIn(List<String> values) {
            addCriterion("TEAM_NAME in", values, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotIn(List<String> values) {
            addCriterion("TEAM_NAME not in", values, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameBetween(String value1, String value2) {
            addCriterion("TEAM_NAME between", value1, value2, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotBetween(String value1, String value2) {
            addCriterion("TEAM_NAME not between", value1, value2, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnIsNull() {
            addCriterion("TEAM_SOLAGN is null");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnIsNotNull() {
            addCriterion("TEAM_SOLAGN is not null");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnEqualTo(String value) {
            addCriterion("TEAM_SOLAGN =", value, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnNotEqualTo(String value) {
            addCriterion("TEAM_SOLAGN <>", value, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnGreaterThan(String value) {
            addCriterion("TEAM_SOLAGN >", value, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnGreaterThanOrEqualTo(String value) {
            addCriterion("TEAM_SOLAGN >=", value, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnLessThan(String value) {
            addCriterion("TEAM_SOLAGN <", value, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnLessThanOrEqualTo(String value) {
            addCriterion("TEAM_SOLAGN <=", value, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnLike(String value) {
            addCriterion("TEAM_SOLAGN like", value, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnNotLike(String value) {
            addCriterion("TEAM_SOLAGN not like", value, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnIn(List<String> values) {
            addCriterion("TEAM_SOLAGN in", values, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnNotIn(List<String> values) {
            addCriterion("TEAM_SOLAGN not in", values, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnBetween(String value1, String value2) {
            addCriterion("TEAM_SOLAGN between", value1, value2, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamSolagnNotBetween(String value1, String value2) {
            addCriterion("TEAM_SOLAGN not between", value1, value2, "teamSolagn");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlIsNull() {
            addCriterion("TEAM_LOGO_URL is null");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlIsNotNull() {
            addCriterion("TEAM_LOGO_URL is not null");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlEqualTo(String value) {
            addCriterion("TEAM_LOGO_URL =", value, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlNotEqualTo(String value) {
            addCriterion("TEAM_LOGO_URL <>", value, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlGreaterThan(String value) {
            addCriterion("TEAM_LOGO_URL >", value, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlGreaterThanOrEqualTo(String value) {
            addCriterion("TEAM_LOGO_URL >=", value, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlLessThan(String value) {
            addCriterion("TEAM_LOGO_URL <", value, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlLessThanOrEqualTo(String value) {
            addCriterion("TEAM_LOGO_URL <=", value, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlLike(String value) {
            addCriterion("TEAM_LOGO_URL like", value, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlNotLike(String value) {
            addCriterion("TEAM_LOGO_URL not like", value, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlIn(List<String> values) {
            addCriterion("TEAM_LOGO_URL in", values, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlNotIn(List<String> values) {
            addCriterion("TEAM_LOGO_URL not in", values, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlBetween(String value1, String value2) {
            addCriterion("TEAM_LOGO_URL between", value1, value2, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLogoUrlNotBetween(String value1, String value2) {
            addCriterion("TEAM_LOGO_URL not between", value1, value2, "teamLogoUrl");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoIsNull() {
            addCriterion("TEAM_LEADER_NO is null");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoIsNotNull() {
            addCriterion("TEAM_LEADER_NO is not null");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoEqualTo(Integer value) {
            addCriterion("TEAM_LEADER_NO =", value, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoNotEqualTo(Integer value) {
            addCriterion("TEAM_LEADER_NO <>", value, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoGreaterThan(Integer value) {
            addCriterion("TEAM_LEADER_NO >", value, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoGreaterThanOrEqualTo(Integer value) {
            addCriterion("TEAM_LEADER_NO >=", value, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoLessThan(Integer value) {
            addCriterion("TEAM_LEADER_NO <", value, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoLessThanOrEqualTo(Integer value) {
            addCriterion("TEAM_LEADER_NO <=", value, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoIn(List<Integer> values) {
            addCriterion("TEAM_LEADER_NO in", values, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoNotIn(List<Integer> values) {
            addCriterion("TEAM_LEADER_NO not in", values, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_LEADER_NO between", value1, value2, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNoNotBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_LEADER_NO not between", value1, value2, "teamLeaderNo");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameIsNull() {
            addCriterion("TEAM_LEADER_NAME is null");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameIsNotNull() {
            addCriterion("TEAM_LEADER_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameEqualTo(String value) {
            addCriterion("TEAM_LEADER_NAME =", value, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameNotEqualTo(String value) {
            addCriterion("TEAM_LEADER_NAME <>", value, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameGreaterThan(String value) {
            addCriterion("TEAM_LEADER_NAME >", value, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameGreaterThanOrEqualTo(String value) {
            addCriterion("TEAM_LEADER_NAME >=", value, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameLessThan(String value) {
            addCriterion("TEAM_LEADER_NAME <", value, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameLessThanOrEqualTo(String value) {
            addCriterion("TEAM_LEADER_NAME <=", value, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameLike(String value) {
            addCriterion("TEAM_LEADER_NAME like", value, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameNotLike(String value) {
            addCriterion("TEAM_LEADER_NAME not like", value, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameIn(List<String> values) {
            addCriterion("TEAM_LEADER_NAME in", values, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameNotIn(List<String> values) {
            addCriterion("TEAM_LEADER_NAME not in", values, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameBetween(String value1, String value2) {
            addCriterion("TEAM_LEADER_NAME between", value1, value2, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamLeaderNameNotBetween(String value1, String value2) {
            addCriterion("TEAM_LEADER_NAME not between", value1, value2, "teamLeaderName");
            return (Criteria) this;
        }

        public Criteria andTeamProIdIsNull() {
            addCriterion("TEAM_PRO_ID is null");
            return (Criteria) this;
        }

        public Criteria andTeamProIdIsNotNull() {
            addCriterion("TEAM_PRO_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTeamProIdEqualTo(Integer value) {
            addCriterion("TEAM_PRO_ID =", value, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamProIdNotEqualTo(Integer value) {
            addCriterion("TEAM_PRO_ID <>", value, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamProIdGreaterThan(Integer value) {
            addCriterion("TEAM_PRO_ID >", value, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamProIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TEAM_PRO_ID >=", value, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamProIdLessThan(Integer value) {
            addCriterion("TEAM_PRO_ID <", value, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamProIdLessThanOrEqualTo(Integer value) {
            addCriterion("TEAM_PRO_ID <=", value, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamProIdIn(List<Integer> values) {
            addCriterion("TEAM_PRO_ID in", values, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamProIdNotIn(List<Integer> values) {
            addCriterion("TEAM_PRO_ID not in", values, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamProIdBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_PRO_ID between", value1, value2, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamProIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_PRO_ID not between", value1, value2, "teamProId");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreIsNull() {
            addCriterion("TEAM_REAL_SCORE is null");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreIsNotNull() {
            addCriterion("TEAM_REAL_SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreEqualTo(Integer value) {
            addCriterion("TEAM_REAL_SCORE =", value, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreNotEqualTo(Integer value) {
            addCriterion("TEAM_REAL_SCORE <>", value, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreGreaterThan(Integer value) {
            addCriterion("TEAM_REAL_SCORE >", value, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("TEAM_REAL_SCORE >=", value, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreLessThan(Integer value) {
            addCriterion("TEAM_REAL_SCORE <", value, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreLessThanOrEqualTo(Integer value) {
            addCriterion("TEAM_REAL_SCORE <=", value, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreIn(List<Integer> values) {
            addCriterion("TEAM_REAL_SCORE in", values, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreNotIn(List<Integer> values) {
            addCriterion("TEAM_REAL_SCORE not in", values, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_REAL_SCORE between", value1, value2, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRealScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("TEAM_REAL_SCORE not between", value1, value2, "teamRealScore");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeIsNull() {
            addCriterion("TEAM_REGTIME is null");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeIsNotNull() {
            addCriterion("TEAM_REGTIME is not null");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeEqualTo(Date value) {
            addCriterion("TEAM_REGTIME =", value, "teamRegtime");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeNotEqualTo(Date value) {
            addCriterion("TEAM_REGTIME <>", value, "teamRegtime");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeGreaterThan(Date value) {
            addCriterion("TEAM_REGTIME >", value, "teamRegtime");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("TEAM_REGTIME >=", value, "teamRegtime");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeLessThan(Date value) {
            addCriterion("TEAM_REGTIME <", value, "teamRegtime");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeLessThanOrEqualTo(Date value) {
            addCriterion("TEAM_REGTIME <=", value, "teamRegtime");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeIn(List<Date> values) {
            addCriterion("TEAM_REGTIME in", values, "teamRegtime");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeNotIn(List<Date> values) {
            addCriterion("TEAM_REGTIME not in", values, "teamRegtime");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeBetween(Date value1, Date value2) {
            addCriterion("TEAM_REGTIME between", value1, value2, "teamRegtime");
            return (Criteria) this;
        }

        public Criteria andTeamRegtimeNotBetween(Date value1, Date value2) {
            addCriterion("TEAM_REGTIME not between", value1, value2, "teamRegtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_practice_team
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 25 19:47:24 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_practice_team
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}