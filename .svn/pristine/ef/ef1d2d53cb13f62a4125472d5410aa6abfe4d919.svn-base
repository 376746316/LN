<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.cetp.practice.dao.PersonPlanMapper" >
  <resultMap id="BaseResultMap" type="com.chinasofti.cetp.practice.model.PersonPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <id column="PN_PLAN_ID" property="pnPlanId" jdbcType="INTEGER" />
    <result column="PN_STU_NO" property="pnStuNo" jdbcType="INTEGER" />
    <result column="PN_TASK_ID" property="pnTaskId" jdbcType="INTEGER" />
    <result column="PN_SUGGEST_TIME" property="pnSuggestTime" jdbcType="INTEGER" />
    <result column="PN_SUGGEST_TIME_SUFFIX" property="pnSuggestTimeSuffix" jdbcType="CHAR" />
    <result column="PN_PLAN_TIME" property="pnPlanTime" jdbcType="INTEGER" />
    <result column="PN_PLAN_TIME_SUFFIX" property="pnPlanTimeSuffix" jdbcType="CHAR" />
    <result column="PN_PLAN_START_TIME" property="pnPlanStartTime" jdbcType="TIMESTAMP" />
    <result column="PN_PLAN_END_TIME" property="pnPlanEndTime" jdbcType="TIMESTAMP" />
    <result column="PN_REAL_START_TIME" property="pnRealStartTime" jdbcType="TIMESTAMP" />
    <result column="PN_REAL_END_TIME" property="pnRealEndTime" jdbcType="TIMESTAMP" />
    <result column="PN_REAL_TIME" property="pnRealTime" jdbcType="INTEGER" />
    <result column="PN_STATUS" property="pnStatus" jdbcType="CHAR" />
    <result column="PN_RESULT" property="pnResult" jdbcType="VARCHAR" />
    <result column="PN_COMMIT_TIME" property="pnCommitTime" jdbcType="TIMESTAMP" />
    <result column="PN_FINISH_PERCENT" property="pnFinishPercent" jdbcType="DOUBLE" />
    <result column="PN_TEACHER_ID" property="pnTeacherId" jdbcType="INTEGER" />
    <result column="PN_TEACHER_SCORE" property="pnTeacherScore" jdbcType="INTEGER" />
    <result column="PN_TEACHER_REASON" property="pnTeacherReason" jdbcType="VARCHAR" />
    <result column="PN_TEACHER_TIME" property="pnTeacherTime" jdbcType="TIMESTAMP" />
    <result column="PL_REGTIME" property="plRegtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithTask" type="com.chinasofti.cetp.practice.model.MorePersonPlan" extends="BaseResultMap" >
    <result column="TASK_NAME" property="taskName" jdbcType="VARCHAR" />
    <result column="TASK_SCORE" property="taskScore" jdbcType="INTEGER" />
    <result column="TASK_PRE_ID" property="taskPreId" jdbcType="VARCHAR" />
    <result column="TASK_DIFFCULT" property="taskDiffcult" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapProgressRanking" type="com.chinasofti.cetp.practice.model.ProgressRanking" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="numALL" property="numAll" jdbcType="VARCHAR" />
    <result column="numDone" property="numDone" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="TreeStuScore" type="com.chinasofti.cetp.practice.model.TreeStuScore" >
    <!-- add by yf 2013-9-26 -->
    <id column="TASK_ID" property="taskId" jdbcType="INTEGER" />
    <result column="TASK_NAME" property="taskName" jdbcType="VARCHAR" />
    <result column="TASK_SCORE" property="taskScore" jdbcType="INTEGER" />
    <result column="USER_NAME" property="teacherName" jdbcType="VARCHAR" />
    <association property="personPlan" javaType="com.chinasofti.cetp.practice.model.PersonPlan" resultMap="BaseResultMap"></association>  
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PN_PLAN_ID, PN_STU_NO, PN_TASK_ID, PN_SUGGEST_TIME, PN_SUGGEST_TIME_SUFFIX, PN_PLAN_TIME, 
    PN_PLAN_TIME_SUFFIX, PN_PLAN_START_TIME, PN_PLAN_END_TIME, PN_REAL_START_TIME, PN_REAL_END_TIME, 
    PN_REAL_TIME, PN_STATUS, PN_RESULT, PN_COMMIT_TIME, PN_FINISH_PERCENT, PN_TEACHER_ID, 
    PN_TEACHER_SCORE, PN_TEACHER_REASON, PN_TEACHER_TIME, PL_REGTIME
  </sql>
  <sql id="Task_Column_List" >
  TASK_NAME, TASK_DIFFCULT, TASK_SCORE, TASK_PRE_ID
  </sql>
  <!-- add by yf 2013-9-26  -->
  <!-- edit by yf 2013-11-25 add pnPlanId  -->
  <select id="getTreeStuScore" resultMap="TreeStuScore" parameterType="map">
	SELECT TASK_ID,
	       TASK_NAME,
	       USER_NAME,
	       PN_PLAN_ID,
	       TASK_SCORE,
	       PN_TEACHER_SCORE,
	       PN_TEACHER_REASON
	FROM   tp_pro_task
	       LEFT JOIN tp_person_plan
	         ON ( TASK_ID = PN_TASK_ID
	              AND PN_STU_NO = #{stuNo,jdbcType=INTEGER} )
	       LEFT JOIN tp_user
	         ON( PN_TEACHER_ID = USER_NO )
	WHERE  TASK_PRO_ID = #{proId,jdbcType=INTEGER} 
	<if test="parentId != null" >
    	   AND TASK_PARENT = #{parentId,jdbcType=INTEGER} 
    </if>
	<if test="parentId == null" >
    	   AND TASK_PARENT is null
    </if>
  </select>
  <!-- end -->
  <select id="getPersonalPracPerProgressRanking" resultMap="ResultMapProgressRanking" parameterType="java.lang.Integer" >
	<!--  add by YF 2013-9-24  -->
	SELECT
		tp_student.STU_NO AS ID,
		tp_student.STU_NAME AS NAME,
		IFNULL(
			Count(tp_person_plan.PN_TASK_ID),
			0
		) AS numALL,
		IFNULL(
			(
				SELECT
					Count(0)
				FROM
					tp_person_plan
				WHERE
					tp_person_plan.PN_STATUS = '4'
				AND tp_person_plan.PN_STU_NO = tp_student.STU_NO
				AND tp_person_plan.PN_TASK_ID IN (
					SELECT
						tp_pro_task.TASK_ID
					FROM
						tp_pro_task
					WHERE
						tp_pro_task.TASK_PRO_ID = tp_prac_person.PP_PRO_ID
				)
			),
			0
		) AS numDone,
		SUM(
			Ifnull(PN_FINISH_PERCENT, 0) * Ifnull(TASK_SCORE, 0)
		) / 100.0 AS finPercent
	FROM
		tp_prac_person
	INNER JOIN tp_student ON PP_STU_ID = STU_NO
	LEFT JOIN tp_person_plan ON (
		tp_person_plan.PN_STU_NO = tp_student.STU_NO
		AND tp_person_plan.PN_TASK_ID IN (
			SELECT
				tp_pro_task.TASK_ID
			FROM
				tp_pro_task
			WHERE
				tp_pro_task.TASK_PRO_ID = tp_prac_person.PP_PRO_ID
		)
	)
	LEFT JOIN tp_pro_task ON TASK_ID = PN_TASK_ID
	WHERE
		PP_PRAC_ID = #{pracId,jdbcType=INTEGER}
	GROUP BY
		tp_student.STU_NO
	ORDER BY
		finPercent DESC
  </select>
  <select id="getPersonalPracPerRank" resultType="java.lang.Integer" parameterType="map" >
	<!--  add by YF 2013-9-24  -->
	SELECT Count(0)
	FROM   (SELECT ID,
	               NAME,
	               numDone,
	               numALL,
	               Ifnull(numDone / numALL, 0) AS finPercent
	        FROM   (SELECT tp_student.STU_NO                                                                                     AS ID,
	                       tp_student.STU_NAME                                                                                   AS NAME,
	                       Count(tp_person_plan.PN_TASK_ID)                                                                      AS numALL,
	                       (SELECT Count(0)
	                        FROM   tp_person_plan
	                        WHERE  tp_person_plan.PN_STATUS = '4'
	                               AND tp_person_plan.PN_STU_NO = tp_student.STU_NO
	                               AND tp_person_plan.PN_TASK_ID IN (SELECT tp_pro_task.TASK_ID
	                                                                 FROM   tp_pro_task
	                                                                 WHERE  tp_pro_task.TASK_PRO_ID = tp_prac_person.PP_PRO_ID)) AS numDone
	                FROM   tp_practice_class
	                       INNER JOIN tp_student
	                         ON tp_practice_class.PC_CLASS_ID = tp_student.STU_CLASS_ID
	                       LEFT JOIN tp_prac_person
	                         ON ( tp_prac_person.PP_PRAC_ID = tp_practice_class.PC_PRAC_ID
	                              AND tp_prac_person.PP_STU_ID = tp_student.STU_NO )
	                       LEFT JOIN tp_person_plan
	                         ON ( tp_person_plan.PN_STU_NO = tp_student.STU_NO
	                              AND tp_person_plan.PN_TASK_ID IN (SELECT tp_pro_task.TASK_ID
	                                                                FROM   tp_pro_task
	                                                                WHERE  tp_pro_task.TASK_PRO_ID = tp_prac_person.PP_PRO_ID) )
	                WHERE  tp_practice_class.PC_PRAC_ID = #{pracId,jdbcType=INTEGER}
	                GROUP  BY tp_student.STU_NO) a
	        ORDER  BY finPercent DESC) d
	WHERE  Round(d.finPercent, 4) > Round((SELECT Ifnull((SELECT Count(0)
	                                                      FROM   tp_person_plan
	                                                      WHERE  PN_STU_NO = #{stuNo,jdbcType=INTEGER}
	                                                             AND PN_STATUS = '4'
	                                                             AND PN_TASK_ID IN (SELECT TASK_ID
	                                                                                FROM   tp_pro_task
	                                                                                WHERE  TASK_PRO_ID = #{proId,jdbcType=INTEGER})) / Count(0), 0) AS finPercent
	                                       FROM   tp_person_plan
	                                       WHERE  PN_STU_NO = #{stuNo,jdbcType=INTEGER}
	                                              AND PN_TASK_ID IN (SELECT TASK_ID
	                                                                 FROM   tp_pro_task
	                                                                 WHERE  TASK_PRO_ID = #{proId,jdbcType=INTEGER})), 4) 
  </select>
  <select id="getStuProgress" resultMap="ResultMapWithTask" parameterType="map" >
    <!--  add by YF 2013-9-17  -->
	SELECT 
	<include refid="Base_Column_List" />,
	<include refid="Task_Column_List" />
	FROM   tp_person_plan
	       INNER JOIN tp_pro_task
	         ON tp_person_plan.PN_TASK_ID = tp_pro_task.TASK_ID
	WHERE  tp_pro_task.TASK_PRO_ID = #{proId,jdbcType=INTEGER}
	       AND tp_person_plan.PN_STU_NO = #{stuNo,jdbcType=INTEGER} 
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chinasofti.cetp.practice.model.PersonPlanExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tp_person_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from tp_person_plan
    where PN_PLAN_ID = #{pnPlanId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_person_plan
    where PN_PLAN_ID = #{pnPlanId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinasofti.cetp.practice.model.PersonPlanExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_person_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinasofti.cetp.practice.model.PersonPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_person_plan (PN_PLAN_ID, PN_STU_NO, PN_TASK_ID, 
      PN_SUGGEST_TIME, PN_SUGGEST_TIME_SUFFIX, PN_PLAN_TIME, 
      PN_PLAN_TIME_SUFFIX, PN_PLAN_START_TIME, PN_PLAN_END_TIME, 
      PN_REAL_START_TIME, PN_REAL_END_TIME, PN_REAL_TIME, 
      PN_STATUS, PN_RESULT, PN_COMMIT_TIME, 
      PN_FINISH_PERCENT, PN_TEACHER_ID, PN_TEACHER_SCORE, 
      PN_TEACHER_REASON, PN_TEACHER_TIME, PL_REGTIME
      )
    values (#{pnPlanId,jdbcType=INTEGER}, #{pnStuNo,jdbcType=INTEGER}, #{pnTaskId,jdbcType=INTEGER}, 
      #{pnSuggestTime,jdbcType=INTEGER}, #{pnSuggestTimeSuffix,jdbcType=CHAR}, #{pnPlanTime,jdbcType=INTEGER}, 
      #{pnPlanTimeSuffix,jdbcType=CHAR}, #{pnPlanStartTime,jdbcType=TIMESTAMP}, #{pnPlanEndTime,jdbcType=TIMESTAMP}, 
      #{pnRealStartTime,jdbcType=TIMESTAMP}, #{pnRealEndTime,jdbcType=TIMESTAMP}, #{pnRealTime,jdbcType=INTEGER}, 
      #{pnStatus,jdbcType=CHAR}, #{pnResult,jdbcType=VARCHAR}, #{pnCommitTime,jdbcType=TIMESTAMP}, 
      #{pnFinishPercent,jdbcType=DOUBLE}, #{pnTeacherId,jdbcType=INTEGER}, #{pnTeacherScore,jdbcType=INTEGER}, 
      #{pnTeacherReason,jdbcType=VARCHAR}, #{pnTeacherTime,jdbcType=TIMESTAMP}, #{plRegtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chinasofti.cetp.practice.model.PersonPlan"  useGeneratedKeys="true" keyProperty="pnPlanId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_person_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pnPlanId != null" >
        PN_PLAN_ID,
      </if>
      <if test="pnStuNo != null" >
        PN_STU_NO,
      </if>
      <if test="pnTaskId != null" >
        PN_TASK_ID,
      </if>
      <if test="pnSuggestTime != null" >
        PN_SUGGEST_TIME,
      </if>
      <if test="pnSuggestTimeSuffix != null" >
        PN_SUGGEST_TIME_SUFFIX,
      </if>
      <if test="pnPlanTime != null" >
        PN_PLAN_TIME,
      </if>
      <if test="pnPlanTimeSuffix != null" >
        PN_PLAN_TIME_SUFFIX,
      </if>
      <if test="pnPlanStartTime != null" >
        PN_PLAN_START_TIME,
      </if>
      <if test="pnPlanEndTime != null" >
        PN_PLAN_END_TIME,
      </if>
      <if test="pnRealStartTime != null" >
        PN_REAL_START_TIME,
      </if>
      <if test="pnRealEndTime != null" >
        PN_REAL_END_TIME,
      </if>
      <if test="pnRealTime != null" >
        PN_REAL_TIME,
      </if>
      <if test="pnStatus != null" >
        PN_STATUS,
      </if>
      <if test="pnResult != null" >
        PN_RESULT,
      </if>
      <if test="pnCommitTime != null" >
        PN_COMMIT_TIME,
      </if>
      <if test="pnFinishPercent != null" >
        PN_FINISH_PERCENT,
      </if>
      <if test="pnTeacherId != null" >
        PN_TEACHER_ID,
      </if>
      <if test="pnTeacherScore != null" >
        PN_TEACHER_SCORE,
      </if>
      <if test="pnTeacherReason != null" >
        PN_TEACHER_REASON,
      </if>
      <if test="pnTeacherTime != null" >
        PN_TEACHER_TIME,
      </if>
      <if test="plRegtime != null" >
        PL_REGTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pnPlanId != null" >
        #{pnPlanId,jdbcType=INTEGER},
      </if>
      <if test="pnStuNo != null" >
        #{pnStuNo,jdbcType=INTEGER},
      </if>
      <if test="pnTaskId != null" >
        #{pnTaskId,jdbcType=INTEGER},
      </if>
      <if test="pnSuggestTime != null" >
        #{pnSuggestTime,jdbcType=INTEGER},
      </if>
      <if test="pnSuggestTimeSuffix != null" >
        #{pnSuggestTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="pnPlanTime != null" >
        #{pnPlanTime,jdbcType=INTEGER},
      </if>
      <if test="pnPlanTimeSuffix != null" >
        #{pnPlanTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="pnPlanStartTime != null" >
        #{pnPlanStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnPlanEndTime != null" >
        #{pnPlanEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnRealStartTime != null" >
        #{pnRealStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnRealEndTime != null" >
        #{pnRealEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnRealTime != null" >
        #{pnRealTime,jdbcType=INTEGER},
      </if>
      <if test="pnStatus != null" >
        #{pnStatus,jdbcType=CHAR},
      </if>
      <if test="pnResult != null" >
        #{pnResult,jdbcType=VARCHAR},
      </if>
      <if test="pnCommitTime != null" >
        #{pnCommitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnFinishPercent != null" >
        #{pnFinishPercent,jdbcType=DOUBLE},
      </if>
      <if test="pnTeacherId != null" >
        #{pnTeacherId,jdbcType=INTEGER},
      </if>
      <if test="pnTeacherScore != null" >
        #{pnTeacherScore,jdbcType=INTEGER},
      </if>
      <if test="pnTeacherReason != null" >
        #{pnTeacherReason,jdbcType=VARCHAR},
      </if>
      <if test="pnTeacherTime != null" >
        #{pnTeacherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plRegtime != null" >
        #{plRegtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinasofti.cetp.practice.model.PersonPlanExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select count(*) from tp_person_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_person_plan
    <set >
      <if test="record.pnPlanId != null" >
        PN_PLAN_ID = #{record.pnPlanId,jdbcType=INTEGER},
      </if>
      <if test="record.pnStuNo != null" >
        PN_STU_NO = #{record.pnStuNo,jdbcType=INTEGER},
      </if>
      <if test="record.pnTaskId != null" >
        PN_TASK_ID = #{record.pnTaskId,jdbcType=INTEGER},
      </if>
      <if test="record.pnSuggestTime != null" >
        PN_SUGGEST_TIME = #{record.pnSuggestTime,jdbcType=INTEGER},
      </if>
      <if test="record.pnSuggestTimeSuffix != null" >
        PN_SUGGEST_TIME_SUFFIX = #{record.pnSuggestTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="record.pnPlanTime != null" >
        PN_PLAN_TIME = #{record.pnPlanTime,jdbcType=INTEGER},
      </if>
      <if test="record.pnPlanTimeSuffix != null" >
        PN_PLAN_TIME_SUFFIX = #{record.pnPlanTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="record.pnPlanStartTime != null" >
        PN_PLAN_START_TIME = #{record.pnPlanStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pnPlanEndTime != null" >
        PN_PLAN_END_TIME = #{record.pnPlanEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pnRealStartTime != null" >
        PN_REAL_START_TIME = #{record.pnRealStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pnRealEndTime != null" >
        PN_REAL_END_TIME = #{record.pnRealEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pnRealTime != null" >
        PN_REAL_TIME = #{record.pnRealTime,jdbcType=INTEGER},
      </if>
      <if test="record.pnStatus != null" >
        PN_STATUS = #{record.pnStatus,jdbcType=CHAR},
      </if>
      <if test="record.pnResult != null" >
        PN_RESULT = #{record.pnResult,jdbcType=VARCHAR},
      </if>
      <if test="record.pnCommitTime != null" >
        PN_COMMIT_TIME = #{record.pnCommitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pnFinishPercent != null" >
        PN_FINISH_PERCENT = #{record.pnFinishPercent,jdbcType=DOUBLE},
      </if>
      <if test="record.pnTeacherId != null" >
        PN_TEACHER_ID = #{record.pnTeacherId,jdbcType=INTEGER},
      </if>
      <if test="record.pnTeacherScore != null" >
        PN_TEACHER_SCORE = #{record.pnTeacherScore,jdbcType=INTEGER},
      </if>
      <if test="record.pnTeacherReason != null" >
        PN_TEACHER_REASON = #{record.pnTeacherReason,jdbcType=VARCHAR},
      </if>
      <if test="record.pnTeacherTime != null" >
        PN_TEACHER_TIME = #{record.pnTeacherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.plRegtime != null" >
        PL_REGTIME = #{record.plRegtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_person_plan
    set PN_PLAN_ID = #{record.pnPlanId,jdbcType=INTEGER},
      PN_STU_NO = #{record.pnStuNo,jdbcType=INTEGER},
      PN_TASK_ID = #{record.pnTaskId,jdbcType=INTEGER},
      PN_SUGGEST_TIME = #{record.pnSuggestTime,jdbcType=INTEGER},
      PN_SUGGEST_TIME_SUFFIX = #{record.pnSuggestTimeSuffix,jdbcType=CHAR},
      PN_PLAN_TIME = #{record.pnPlanTime,jdbcType=INTEGER},
      PN_PLAN_TIME_SUFFIX = #{record.pnPlanTimeSuffix,jdbcType=CHAR},
      PN_PLAN_START_TIME = #{record.pnPlanStartTime,jdbcType=TIMESTAMP},
      PN_PLAN_END_TIME = #{record.pnPlanEndTime,jdbcType=TIMESTAMP},
      PN_REAL_START_TIME = #{record.pnRealStartTime,jdbcType=TIMESTAMP},
      PN_REAL_END_TIME = #{record.pnRealEndTime,jdbcType=TIMESTAMP},
      PN_REAL_TIME = #{record.pnRealTime,jdbcType=INTEGER},
      PN_STATUS = #{record.pnStatus,jdbcType=CHAR},
      PN_RESULT = #{record.pnResult,jdbcType=VARCHAR},
      PN_COMMIT_TIME = #{record.pnCommitTime,jdbcType=TIMESTAMP},
      PN_FINISH_PERCENT = #{record.pnFinishPercent,jdbcType=DOUBLE},
      PN_TEACHER_ID = #{record.pnTeacherId,jdbcType=INTEGER},
      PN_TEACHER_SCORE = #{record.pnTeacherScore,jdbcType=INTEGER},
      PN_TEACHER_REASON = #{record.pnTeacherReason,jdbcType=VARCHAR},
      PN_TEACHER_TIME = #{record.pnTeacherTime,jdbcType=TIMESTAMP},
      PL_REGTIME = #{record.plRegtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinasofti.cetp.practice.model.PersonPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_person_plan
    <set >
      <if test="pnStuNo != null" >
        PN_STU_NO = #{pnStuNo,jdbcType=INTEGER},
      </if>
      <if test="pnTaskId != null" >
        PN_TASK_ID = #{pnTaskId,jdbcType=INTEGER},
      </if>
      <if test="pnSuggestTime != null" >
        PN_SUGGEST_TIME = #{pnSuggestTime,jdbcType=INTEGER},
      </if>
      <if test="pnSuggestTimeSuffix != null" >
        PN_SUGGEST_TIME_SUFFIX = #{pnSuggestTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="pnPlanTime != null" >
        PN_PLAN_TIME = #{pnPlanTime,jdbcType=INTEGER},
      </if>
      <if test="pnPlanTimeSuffix != null" >
        PN_PLAN_TIME_SUFFIX = #{pnPlanTimeSuffix,jdbcType=CHAR},
      </if>
      <if test="pnPlanStartTime != null" >
        PN_PLAN_START_TIME = #{pnPlanStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnPlanEndTime != null" >
        PN_PLAN_END_TIME = #{pnPlanEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnRealStartTime != null" >
        PN_REAL_START_TIME = #{pnRealStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnRealEndTime != null" >
        PN_REAL_END_TIME = #{pnRealEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnRealTime != null" >
        PN_REAL_TIME = #{pnRealTime,jdbcType=INTEGER},
      </if>
      <if test="pnStatus != null" >
        PN_STATUS = #{pnStatus,jdbcType=CHAR},
      </if>
      <if test="pnResult != null" >
        PN_RESULT = #{pnResult,jdbcType=VARCHAR},
      </if>
      <if test="pnCommitTime != null" >
        PN_COMMIT_TIME = #{pnCommitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pnFinishPercent != null" >
        PN_FINISH_PERCENT = #{pnFinishPercent,jdbcType=DOUBLE},
      </if>
      <if test="pnTeacherId != null" >
        PN_TEACHER_ID = #{pnTeacherId,jdbcType=INTEGER},
      </if>
      <if test="pnTeacherScore != null" >
        PN_TEACHER_SCORE = #{pnTeacherScore,jdbcType=INTEGER},
      </if>
      <if test="pnTeacherReason != null" >
        PN_TEACHER_REASON = #{pnTeacherReason,jdbcType=VARCHAR},
      </if>
      <if test="pnTeacherTime != null" >
        PN_TEACHER_TIME = #{pnTeacherTime,jdbcType=TIMESTAMP},
      </if>
      <if test="plRegtime != null" >
        PL_REGTIME = #{plRegtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where PN_PLAN_ID = #{pnPlanId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinasofti.cetp.practice.model.PersonPlan" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_person_plan
    set PN_STU_NO = #{pnStuNo,jdbcType=INTEGER},
      PN_TASK_ID = #{pnTaskId,jdbcType=INTEGER},
      PN_SUGGEST_TIME = #{pnSuggestTime,jdbcType=INTEGER},
      PN_SUGGEST_TIME_SUFFIX = #{pnSuggestTimeSuffix,jdbcType=CHAR},
      PN_PLAN_TIME = #{pnPlanTime,jdbcType=INTEGER},
      PN_PLAN_TIME_SUFFIX = #{pnPlanTimeSuffix,jdbcType=CHAR},
      PN_PLAN_START_TIME = #{pnPlanStartTime,jdbcType=TIMESTAMP},
      PN_PLAN_END_TIME = #{pnPlanEndTime,jdbcType=TIMESTAMP},
      PN_REAL_START_TIME = #{pnRealStartTime,jdbcType=TIMESTAMP},
      PN_REAL_END_TIME = #{pnRealEndTime,jdbcType=TIMESTAMP},
      PN_REAL_TIME = #{pnRealTime,jdbcType=INTEGER},
      PN_STATUS = #{pnStatus,jdbcType=CHAR},
      PN_RESULT = #{pnResult,jdbcType=VARCHAR},
      PN_COMMIT_TIME = #{pnCommitTime,jdbcType=TIMESTAMP},
      PN_FINISH_PERCENT = #{pnFinishPercent,jdbcType=DOUBLE},
      PN_TEACHER_ID = #{pnTeacherId,jdbcType=INTEGER},
      PN_TEACHER_SCORE = #{pnTeacherScore,jdbcType=INTEGER},
      PN_TEACHER_REASON = #{pnTeacherReason,jdbcType=VARCHAR},
      PN_TEACHER_TIME = #{pnTeacherTime,jdbcType=TIMESTAMP},
      PL_REGTIME = #{plRegtime,jdbcType=TIMESTAMP}
    where PN_PLAN_ID = #{pnPlanId,jdbcType=INTEGER}
  </update>
  <select id="countPP" parameterType="map" resultType="java.lang.Integer">
	SELECT
		COUNT(0)
	FROM
		tp_person_plan
	INNER JOIN tp_pro_task ON PN_TASK_ID = TASK_ID
	WHERE
		PN_STU_NO = #{stuNo,jdbcType=INTEGER}
	AND TASK_PRO_ID = #{proId,jdbcType=INTEGER} 
  </select>
  <delete id="deleteByProId" parameterType="map">
	DELETE
	FROM
		tp_person_plan
	WHERE
		PN_STU_NO = #{stuNo}
	AND PN_TASK_ID IN (
		SELECT
			TASK_ID
		FROM
			tp_pro_task
		WHERE
			TASK_PRO_ID = #{proId}
	)  
  </delete>
</mapper>