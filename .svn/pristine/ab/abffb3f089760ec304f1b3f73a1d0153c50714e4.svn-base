<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.cetp.practice.dao.AvailProMapper" >
  <resultMap id="BaseResultMap" type="com.chinasofti.cetp.practice.model.MoreAvailPro" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <id column="AP_PRAC_ID" property="apPracId" jdbcType="INTEGER" />
    <id column="AP_PRO_ID" property="apProId" jdbcType="INTEGER" />
    <result column="AP_USER_NO" property="apUserNo" jdbcType="INTEGER" />
    <result column="AP_REGTIME" property="apRegtime" jdbcType="TIMESTAMP" />
    
   	<result column="PRO_ID" property="proId" jdbcType="INTEGER" />													<!-- 案例编号 -->
	<result column="PRO_NAME" property="proName" jdbcType="VARCHAR" />											<!-- 案例名称 -->
	<result column="PRO_TYPE_ID" property="proTypeId" jdbcType="INTEGER" />									<!-- 案例分类ID -->
	<result column="TECH_TYPE_NAME" property="techTypeName" jdbcType="VARCHAR" />					<!-- 分类名称 -->
	<result column="PRO_IS_TEAM" property="proIsTeam" jdbcType="CHAR" />										<!-- 是否为团队项目 -->
	<result column="PRO_DOMAIN" property="proDomain" jdbcType="CHAR" />										<!-- 应用领域 -->
	<result column="PRO_LANGUAGE" property="proLanguage" jdbcType="VARCHAR" />							<!-- 开发语言 -->
	<result column="PRO_DIFFCULT" property="proDiffcult" jdbcType="CHAR" />										<!-- 难度级别 -->
	<result column="PRO_PERSON_NUM" property="proPersonNum" jdbcType="INTEGER" />						<!-- 团队人数 -->
	<result column="PRO_REGTIME" property="proRegtime" jdbcType="TIMESTAMP" />							<!-- 记录创建时间 -->
	
	<result column="PRAC_ID" property="pracId" jdbcType="INTEGER" />
   	<result column="PRAC_NAME" property="pracName" jdbcType="VARCHAR" />
   	
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    AP_PRAC_ID, AP_PRO_ID, AP_USER_NO, AP_REGTIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chinasofti.cetp.practice.model.AvailProExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tp_avail_pro
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.chinasofti.cetp.practice.model.AvailProKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from tp_avail_pro
    where AP_PRAC_ID = #{apPracId,jdbcType=INTEGER}
      and AP_PRO_ID = #{apProId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.chinasofti.cetp.practice.model.AvailProKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_avail_pro
    where AP_PRAC_ID = #{apPracId,jdbcType=INTEGER}
      and AP_PRO_ID = #{apProId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinasofti.cetp.practice.model.AvailProExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    delete from tp_avail_pro
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinasofti.cetp.practice.model.AvailPro" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_avail_pro (AP_PRAC_ID, AP_PRO_ID, AP_USER_NO, AP_REGTIME)
    values (#{apPracId,jdbcType=INTEGER}, #{apProId,jdbcType=INTEGER}, #{apUserNo,jdbcType=INTEGER}, 
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.chinasofti.cetp.practice.model.AvailPro" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    insert into tp_avail_pro
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="apPracId != null" >
        AP_PRAC_ID,
      </if>
      <if test="apProId != null" >
        AP_PRO_ID,
      </if>
      <if test="apUserNo != null" >
        AP_USER_NO,
      </if>
      <if test="apRegtime != null" >
        AP_REGTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="apPracId != null" >
        #{apPracId,jdbcType=INTEGER},
      </if>
      <if test="apProId != null" >
        #{apProId,jdbcType=INTEGER},
      </if>
      <if test="apUserNo != null" >
        #{apUserNo,jdbcType=INTEGER},
      </if>
      <if test="apRegtime != null" >
        #{apRegtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinasofti.cetp.practice.model.AvailProExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    select count(*) from tp_avail_pro
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_avail_pro
    <set >
      <if test="record.apPracId != null" >
        AP_PRAC_ID = #{record.apPracId,jdbcType=INTEGER},
      </if>
      <if test="record.apProId != null" >
        AP_PRO_ID = #{record.apProId,jdbcType=INTEGER},
      </if>
      <if test="record.apUserNo != null" >
        AP_USER_NO = #{record.apUserNo,jdbcType=INTEGER},
      </if>
      <if test="record.apRegtime != null" >
        AP_REGTIME = #{record.apRegtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_avail_pro
    set AP_PRAC_ID = #{record.apPracId,jdbcType=INTEGER},
      AP_PRO_ID = #{record.apProId,jdbcType=INTEGER},
      AP_USER_NO = #{record.apUserNo,jdbcType=INTEGER},
      AP_REGTIME = #{record.apRegtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinasofti.cetp.practice.model.AvailPro" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_avail_pro
    <set >
      <if test="apUserNo != null" >
        AP_USER_NO = #{apUserNo,jdbcType=INTEGER},
      </if>
      <if test="apRegtime != null" >
        AP_REGTIME = #{apRegtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where AP_PRAC_ID = #{apPracId,jdbcType=INTEGER}
      and AP_PRO_ID = #{apProId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinasofti.cetp.practice.model.AvailPro" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jul 25 19:47:24 CST 2013.
    -->
    update tp_avail_pro
    set AP_USER_NO = #{apUserNo,jdbcType=INTEGER},
      AP_REGTIME = #{apRegtime,jdbcType=TIMESTAMP}
    where AP_PRAC_ID = #{apPracId,jdbcType=INTEGER}
      and AP_PRO_ID = #{apProId,jdbcType=INTEGER}
  </update>
  <!-- 已选项目列表 -->
  <select id="selectPro" resultMap="BaseResultMap" resultType="java.lang.Integer" >
  		select	 a.PRO_ID
  					,a.PRO_NAME
  					,a.PRO_TYPE_ID
  					,(case when (a.PRO_DOMAIN= '01') then "公共"
							  when (a.PRO_DOMAIN= '02') then "医疗"
							  when (a.PRO_DOMAIN= '03') then "金融"
							  when (a.PRO_DOMAIN= '04') then "交通"
							  when (a.PRO_DOMAIN= '05') then "办公"
							  when (a.PRO_DOMAIN= '06') then "物流"
							  end)  as PRO_DOMAIN
  					,(case when (a.PRO_DIFFCULT= '1') then "简单"
							  when (a.PRO_DIFFCULT= '2') then "适中"
							  when (a.PRO_DIFFCULT= '3') then "较难"
							  when (a.PRO_DIFFCULT= '4') then "难"
							  when (a.PRO_DIFFCULT= '5') then "很难"
							  end)  as PRO_DIFFCULT
  					,a.PRO_REGTIME
  					,a.PRO_PERSON_NUM
  					,c.PRAC_ID 
  					,c.PRAC_NAME
  					,d.TECH_TYPE_NAME
  		from		TP_PRO		a							<!-- 案例信息 -->
  inner join		TP_AVAIL_PRO	b					<!-- 实训案例关系表 -->
  			on		b.AP_PRO_ID = a.PRO_ID
  inner join		TP_PRACTICE	c					<!-- 实训信息 -->
  			on		c.PRAC_ID = b.AP_PRAC_ID
  	 left join	TP_TECH_TYPE d					<!-- 技术分类 -->
  	 		on		d.TECH_TYPE_ID  = a.PRO_TYPE_ID
  	  where 	c.PRAC_ID  = #{apPracId,jdbcType=INTEGER}
  </select>
  <!-- 未选项目列表 -->
   <select id="notSelectPro" resultMap="BaseResultMap" resultType="java.lang.Integer" >
  		select	 a.PRO_ID
				,a.PRO_NAME
				,a.PRO_TYPE_ID
				,(case when (a.PRO_DOMAIN= '01') then "公共"
						  when (a.PRO_DOMAIN= '02') then "医疗"
						  when (a.PRO_DOMAIN= '03') then "金融"
						  when (a.PRO_DOMAIN= '04') then "交通"
						  when (a.PRO_DOMAIN= '05') then "办公"
						  when (a.PRO_DOMAIN= '06') then "物流"
						  end)  as PRO_DOMAIN
 					,(case when (a.PRO_DIFFCULT= '1') then "简单"
						  when (a.PRO_DIFFCULT= '2') then "适中"
						  when (a.PRO_DIFFCULT= '3') then "较难"
						  when (a.PRO_DIFFCULT= '4') then "难"
						  when (a.PRO_DIFFCULT= '5') then "很难"
						  end)  as PRO_DIFFCULT
				,a.PRO_REGTIME
				,a.PRO_PERSON_NUM
				,d.TECH_TYPE_NAME
  		 from	TP_PRO		a			
	 left join	TP_TECH_TYPE d							
  	 		on		d.TECH_TYPE_ID  = a.PRO_TYPE_ID
	   where 	a.PRO_ID
    	not in	( select	e.PRO_ID
				    from	TP_PRO		e							
			  inner join	TP_AVAIL_PRO	b					
				   	  on	b.AP_PRO_ID = e.PRO_ID
			  inner join	TP_PRACTICE	c				
					  on	c.PRAC_ID = b.AP_PRAC_ID
				   where 	c.PRAC_ID  = #{apPracId,jdbcType=INTEGER}
					)
  </select>
  <select id="selectQueryNotProMng" resultMap="BaseResultMap" resultType="HashMap" >
  		select	 a.PRO_ID
  					,a.PRO_NAME
  					,a.PRO_TYPE_ID
  					,(case when (a.PRO_DOMAIN= '01') then "公共"
							  when (a.PRO_DOMAIN= '02') then "医疗"
							  when (a.PRO_DOMAIN= '03') then "金融"
							  when (a.PRO_DOMAIN= '04') then "交通"
							  when (a.PRO_DOMAIN= '05') then "办公"
							  when (a.PRO_DOMAIN= '06') then "物流"
							  end)  as PRO_DOMAIN
  					,(case when (a.PRO_DIFFCULT= '1') then "简单"
							  when (a.PRO_DIFFCULT= '2') then "适中"
							  when (a.PRO_DIFFCULT= '3') then "较难"
							  when (a.PRO_DIFFCULT= '4') then "难"
							  when (a.PRO_DIFFCULT= '5') then "很难"
							  end)  as PRO_DIFFCULT
  					,a.PRO_REGTIME
  					,a.PRO_PERSON_NUM
  					,d.TECH_TYPE_NAME
  		 from	TP_PRO		a			
	 left join	TP_TECH_TYPE d							
  	 		on		d.TECH_TYPE_ID  = a.PRO_TYPE_ID
	   where 	a.PRO_ID
	    not in	( select		e.PRO_ID
					    from		TP_PRO		e							
				  inner join		TP_AVAIL_PRO	b					
  					   		on		b.AP_PRO_ID = e.PRO_ID
 				  inner join		TP_PRACTICE	c				
  							on		c.PRAC_ID = b.AP_PRAC_ID
					   where 	c.PRAC_ID  = #{apPracId,jdbcType=INTEGER}
					)
	  <if test="selectproname != 'null' and selectproname != '' "  >
      		and	a.PRO_NAME like #{selectproname}
      </if>
      <if test="selectTypeId !=null and selectTypeId !='' ">
      		and	a.PRO_TYPE_ID = #{selectTypeId}
      </if>
      <if test="selectprokeyword != 'null' and selectprokeyword != '' ">
      		and	a.PRO_KRYWORD like #{selectprokeyword}
      </if>
  </select>
  
</mapper>