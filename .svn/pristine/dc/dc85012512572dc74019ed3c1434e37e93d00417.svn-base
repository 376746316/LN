package com.chinasofti.cetp.survey.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SurveyQueExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public SurveyQueExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSqaSurveyIdIsNull() {
            addCriterion("SQA_SURVEY_ID is null");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdIsNotNull() {
            addCriterion("SQA_SURVEY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdEqualTo(Integer value) {
            addCriterion("SQA_SURVEY_ID =", value, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdNotEqualTo(Integer value) {
            addCriterion("SQA_SURVEY_ID <>", value, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdGreaterThan(Integer value) {
            addCriterion("SQA_SURVEY_ID >", value, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("SQA_SURVEY_ID >=", value, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdLessThan(Integer value) {
            addCriterion("SQA_SURVEY_ID <", value, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdLessThanOrEqualTo(Integer value) {
            addCriterion("SQA_SURVEY_ID <=", value, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdIn(List<Integer> values) {
            addCriterion("SQA_SURVEY_ID in", values, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdNotIn(List<Integer> values) {
            addCriterion("SQA_SURVEY_ID not in", values, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdBetween(Integer value1, Integer value2) {
            addCriterion("SQA_SURVEY_ID between", value1, value2, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaSurveyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("SQA_SURVEY_ID not between", value1, value2, "sqaSurveyId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdIsNull() {
            addCriterion("SQA_QUE_ID is null");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdIsNotNull() {
            addCriterion("SQA_QUE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdEqualTo(Integer value) {
            addCriterion("SQA_QUE_ID =", value, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdNotEqualTo(Integer value) {
            addCriterion("SQA_QUE_ID <>", value, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdGreaterThan(Integer value) {
            addCriterion("SQA_QUE_ID >", value, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("SQA_QUE_ID >=", value, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdLessThan(Integer value) {
            addCriterion("SQA_QUE_ID <", value, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdLessThanOrEqualTo(Integer value) {
            addCriterion("SQA_QUE_ID <=", value, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdIn(List<Integer> values) {
            addCriterion("SQA_QUE_ID in", values, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdNotIn(List<Integer> values) {
            addCriterion("SQA_QUE_ID not in", values, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdBetween(Integer value1, Integer value2) {
            addCriterion("SQA_QUE_ID between", value1, value2, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaQueIdNotBetween(Integer value1, Integer value2) {
            addCriterion("SQA_QUE_ID not between", value1, value2, "sqaQueId");
            return (Criteria) this;
        }

        public Criteria andSqaScoreIsNull() {
            addCriterion("SQA_SCORE is null");
            return (Criteria) this;
        }

        public Criteria andSqaScoreIsNotNull() {
            addCriterion("SQA_SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andSqaScoreEqualTo(Integer value) {
            addCriterion("SQA_SCORE =", value, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaScoreNotEqualTo(Integer value) {
            addCriterion("SQA_SCORE <>", value, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaScoreGreaterThan(Integer value) {
            addCriterion("SQA_SCORE >", value, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("SQA_SCORE >=", value, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaScoreLessThan(Integer value) {
            addCriterion("SQA_SCORE <", value, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaScoreLessThanOrEqualTo(Integer value) {
            addCriterion("SQA_SCORE <=", value, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaScoreIn(List<Integer> values) {
            addCriterion("SQA_SCORE in", values, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaScoreNotIn(List<Integer> values) {
            addCriterion("SQA_SCORE not in", values, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaScoreBetween(Integer value1, Integer value2) {
            addCriterion("SQA_SCORE between", value1, value2, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("SQA_SCORE not between", value1, value2, "sqaScore");
            return (Criteria) this;
        }

        public Criteria andSqaSeqIsNull() {
            addCriterion("SQA_SEQ is null");
            return (Criteria) this;
        }

        public Criteria andSqaSeqIsNotNull() {
            addCriterion("SQA_SEQ is not null");
            return (Criteria) this;
        }

        public Criteria andSqaSeqEqualTo(Integer value) {
            addCriterion("SQA_SEQ =", value, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaSeqNotEqualTo(Integer value) {
            addCriterion("SQA_SEQ <>", value, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaSeqGreaterThan(Integer value) {
            addCriterion("SQA_SEQ >", value, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaSeqGreaterThanOrEqualTo(Integer value) {
            addCriterion("SQA_SEQ >=", value, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaSeqLessThan(Integer value) {
            addCriterion("SQA_SEQ <", value, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaSeqLessThanOrEqualTo(Integer value) {
            addCriterion("SQA_SEQ <=", value, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaSeqIn(List<Integer> values) {
            addCriterion("SQA_SEQ in", values, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaSeqNotIn(List<Integer> values) {
            addCriterion("SQA_SEQ not in", values, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaSeqBetween(Integer value1, Integer value2) {
            addCriterion("SQA_SEQ between", value1, value2, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaSeqNotBetween(Integer value1, Integer value2) {
            addCriterion("SQA_SEQ not between", value1, value2, "sqaSeq");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeIsNull() {
            addCriterion("SQA_REGTIME is null");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeIsNotNull() {
            addCriterion("SQA_REGTIME is not null");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeEqualTo(Date value) {
            addCriterion("SQA_REGTIME =", value, "sqaRegtime");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeNotEqualTo(Date value) {
            addCriterion("SQA_REGTIME <>", value, "sqaRegtime");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeGreaterThan(Date value) {
            addCriterion("SQA_REGTIME >", value, "sqaRegtime");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("SQA_REGTIME >=", value, "sqaRegtime");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeLessThan(Date value) {
            addCriterion("SQA_REGTIME <", value, "sqaRegtime");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeLessThanOrEqualTo(Date value) {
            addCriterion("SQA_REGTIME <=", value, "sqaRegtime");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeIn(List<Date> values) {
            addCriterion("SQA_REGTIME in", values, "sqaRegtime");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeNotIn(List<Date> values) {
            addCriterion("SQA_REGTIME not in", values, "sqaRegtime");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeBetween(Date value1, Date value2) {
            addCriterion("SQA_REGTIME between", value1, value2, "sqaRegtime");
            return (Criteria) this;
        }

        public Criteria andSqaRegtimeNotBetween(Date value1, Date value2) {
            addCriterion("SQA_REGTIME not between", value1, value2, "sqaRegtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_survey_que
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 25 20:01:32 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_survey_que
     *
     * @mbggenerated Thu Jul 25 20:01:32 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}