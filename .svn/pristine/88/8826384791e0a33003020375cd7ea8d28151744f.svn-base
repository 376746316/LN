package com.chinasofti.cetp.practice.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TaskCourseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public TaskCourseExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTrTaskIdIsNull() {
            addCriterion("TR_TASK_ID is null");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdIsNotNull() {
            addCriterion("TR_TASK_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdEqualTo(Integer value) {
            addCriterion("TR_TASK_ID =", value, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdNotEqualTo(Integer value) {
            addCriterion("TR_TASK_ID <>", value, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdGreaterThan(Integer value) {
            addCriterion("TR_TASK_ID >", value, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TR_TASK_ID >=", value, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdLessThan(Integer value) {
            addCriterion("TR_TASK_ID <", value, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdLessThanOrEqualTo(Integer value) {
            addCriterion("TR_TASK_ID <=", value, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdIn(List<Integer> values) {
            addCriterion("TR_TASK_ID in", values, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdNotIn(List<Integer> values) {
            addCriterion("TR_TASK_ID not in", values, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdBetween(Integer value1, Integer value2) {
            addCriterion("TR_TASK_ID between", value1, value2, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrTaskIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TR_TASK_ID not between", value1, value2, "trTaskId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdIsNull() {
            addCriterion("TR_COURSE_ID is null");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdIsNotNull() {
            addCriterion("TR_COURSE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdEqualTo(Integer value) {
            addCriterion("TR_COURSE_ID =", value, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdNotEqualTo(Integer value) {
            addCriterion("TR_COURSE_ID <>", value, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdGreaterThan(Integer value) {
            addCriterion("TR_COURSE_ID >", value, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TR_COURSE_ID >=", value, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdLessThan(Integer value) {
            addCriterion("TR_COURSE_ID <", value, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdLessThanOrEqualTo(Integer value) {
            addCriterion("TR_COURSE_ID <=", value, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdIn(List<Integer> values) {
            addCriterion("TR_COURSE_ID in", values, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdNotIn(List<Integer> values) {
            addCriterion("TR_COURSE_ID not in", values, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdBetween(Integer value1, Integer value2) {
            addCriterion("TR_COURSE_ID between", value1, value2, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrCourseIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TR_COURSE_ID not between", value1, value2, "trCourseId");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeIsNull() {
            addCriterion("TR_REGTIME is null");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeIsNotNull() {
            addCriterion("TR_REGTIME is not null");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeEqualTo(Date value) {
            addCriterion("TR_REGTIME =", value, "trRegtime");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeNotEqualTo(Date value) {
            addCriterion("TR_REGTIME <>", value, "trRegtime");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeGreaterThan(Date value) {
            addCriterion("TR_REGTIME >", value, "trRegtime");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("TR_REGTIME >=", value, "trRegtime");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeLessThan(Date value) {
            addCriterion("TR_REGTIME <", value, "trRegtime");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeLessThanOrEqualTo(Date value) {
            addCriterion("TR_REGTIME <=", value, "trRegtime");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeIn(List<Date> values) {
            addCriterion("TR_REGTIME in", values, "trRegtime");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeNotIn(List<Date> values) {
            addCriterion("TR_REGTIME not in", values, "trRegtime");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeBetween(Date value1, Date value2) {
            addCriterion("TR_REGTIME between", value1, value2, "trRegtime");
            return (Criteria) this;
        }

        public Criteria andTrRegtimeNotBetween(Date value1, Date value2) {
            addCriterion("TR_REGTIME not between", value1, value2, "trRegtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_task_course
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 25 19:47:24 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tp_task_course
     *
     * @mbggenerated Thu Jul 25 19:47:24 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}